{"ast":null,"code":"import _slicedToArray from\"/Users/shubhamkapoor/gather-video-chat/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/shubhamkapoor/gather-video-chat/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useEffect,useRef,useState}from\"react\";import io from\"socket.io-client\";import Peer from\"simple-peer\";import\"./Room.css\";import Sketch from'react-p5';import styled from\"styled-components\";import Chat from'./Chat';import RoomSetup from'./RoomSetup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var socket=io.connect(\"http://localhost:3001\");var StyledVideo=styled.video(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    height: 300px;\\n    width: 300px;\\n\"])));var Video=function Video(props){var ref=useRef();useEffect(function(){console.log(props.peer);ref.current.srcObject=props.peer.streams[0];},[]);return/*#__PURE__*/_jsx(StyledVideo,{playsInline:true,autoPlay:true,ref:ref});};function Room(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),mic=_useState4[0],setMic=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),cam=_useState6[0],setCam=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),joinedRoom=_useState8[0],setJoinedRoom=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),nearby=_useState10[0],setNearby=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),users=_useState12[0],setUsers=_useState12[1];var userVideo=useRef();var peersRef=useRef([]);var trackPeers=useRef([]);var roomID=props.match.params.roomID;useEffect(function(){navigator.mediaDevices.getUserMedia({video:true,audio:true}).then(function(stream){userVideo.current.srcObject=stream;socket.emit(\"join room\",roomID);socket.on(\"all users\",function(users){users.forEach(function(userID){var peer=createPeer(userID,socket.id,stream);peersRef.current.push({peerID:userID,peer:peer});});});socket.on(\"user joined\",function(payload){var peer=addPeer(payload.signal,payload.callerID,stream);peersRef.current.push({peerID:payload.callerID,peer:peer});});socket.on(\"receiving returned signal\",function(payload){var item=peersRef.current.find(function(p){return p.peerID===payload.id;});item.peer.signal(payload.signal);});socket.on(\"user left\",function(id){var peerObj=peersRef.current.find(function(p){return p.peerID===id;});if(peerObj){peerObj.peer.destroy();}var peers=peersRef.current.filter(function(p){return p.peerID!==id;});var tempNearby=nearby.filter(function(p){return p.peerID!==id;});peersRef.current=peers;setNearby(tempNearby);});});},[]);var createPeer=function createPeer(userToSignal,callerID,stream){var peer=new Peer({initiator:true,trickle:false,stream:stream});peer.on(\"signal\",function(signal){socket.emit(\"sending signal\",{userToSignal:userToSignal,callerID:callerID,signal:signal});});return peer;};var addPeer=function addPeer(incomingSignal,callerID,stream){var peer=new Peer({initiator:false,trickle:false,stream:stream});peer.on(\"signal\",function(signal){socket.emit(\"returning signal\",{signal:signal,callerID:callerID});});peer.signal(incomingSignal);return peer;};useEffect(function(){socket.on('receive move',function(data){setUsers(data.all);var me={};for(var i=0;i<data.all.length;i++){if(data.all[i].id===socket.id){me=data.all[i];break;}}var tempNearby=[];for(var _i=0;_i<data.all.length;_i++){if(data.all[_i].id===socket.id){continue;}if(proximity(data.all[_i],me)){for(var j=0;j<peersRef.current.length;j++){if(peersRef.current[j].peerID===data.all[_i].id){tempNearby.push(peersRef.current[j]);}}}}setNearby(tempNearby);});},[socket]);var muteUnmute=function muteUnmute(e){var enabled=userVideo.current.srcObject.getAudioTracks()[0].enabled;if(enabled){userVideo.current.srcObject.getAudioTracks()[0].enabled=false;}else{userVideo.current.srcObject.getAudioTracks()[0].enabled=true;}};var cameraOnOff=function cameraOnOff(e){var enabled=userVideo.current.srcObject.getVideoTracks()[0].enabled;if(enabled){userVideo.current.srcObject.getVideoTracks()[0].enabled=false;}else{userVideo.current.srcObject.getVideoTracks()[0].enabled=true;}};var screenShare=function screenShare(e){};var stopScreenShare=function stopScreenShare(){};var proximity=function proximity(user,me){if((user.x-me.x)*(user.x-me.x)+(user.y-me.y)*(user.y-me.y)<=10000){return true;}else{return false;}};var setup=function setup(p5,canvas){var canv=p5.createCanvas(800,600).parent(canvas);var tempUsers=[];tempUsers.push({id:socket.id,room:roomID,x:400,y:100});setUsers(tempUsers);};var draw=function draw(p5){p5.background(\"rgb(255, 255, 255)\");var idx=users.findIndex(function(user){return user.id===socket.id;});if(idx!==-1){var tempUsers=users;if(p5.keyIsDown(87)||p5.keyIsDown(38)){tempUsers[idx].y=tempUsers[idx].y-2;}if(p5.keyIsDown(65)||p5.keyIsDown(37)){tempUsers[idx].x=tempUsers[idx].x-2;}if(p5.keyIsDown(83)||p5.keyIsDown(40)){tempUsers[idx].y=tempUsers[idx].y+2;}if(p5.keyIsDown(68)||p5.keyIsDown(39)){tempUsers[idx].x=tempUsers[idx].x+2;}setUsers(tempUsers);var data={id:socket.id,room:roomID,x:tempUsers[idx].x,y:tempUsers[idx].y};socket.emit('send move',data);}for(var i=0;i<users.length;i++){p5.circle(users[i].x,users[i].y,16);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"room\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"video-canvas\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"buttonbox\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"mute\",onClick:function onClick(e){return muteUnmute(e);},children:\" Mute \"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"camera\",onClick:function onClick(e){return cameraOnOff(e);},children:\" Camera \"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"screenshare\",onClick:function onClick(e){return screenShare(e);},children:\" ScreenShare \"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"debug\",onClick:function onClick(e){return console.log(peersRef.current);},children:\" Debug \"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"videobox\",children:[/*#__PURE__*/_jsx(StyledVideo,{muted:true,ref:userVideo,autoPlay:true,playsInline:true}),nearby.map(function(peer){return/*#__PURE__*/_jsx(Video,{peer:peer.peer});})]}),/*#__PURE__*/_jsx(Sketch,{setup:setup,draw:draw,className:\"canvas\"})]}),/*#__PURE__*/_jsx(Chat,{className:\"chat\",socket:socket,room:roomID})]});};export default Room;// import React, { useEffect, useRef, useState } from \"react\";\n// import io from \"socket.io-client\";\n// import Peer from \"simple-peer\";\n// import \"./Room.css\";\n// import Sketch from 'react-p5';\n// import styled from \"styled-components\";\n// import Chat from \"./Chat\";\n// import RoomSetup from './RoomSetup';\n// const socket = io.connect(\"http://localhost:3001\");\n// const StyledVideo = styled.video`\n// \theight: 300px;\n// \twidth: 300px;\n// `;\n// const Video = (props) => {\n// \tconst ref = useRef();\n// \tuseEffect(() => {\n// \t\tref.current.srcObject = props.peer;\n// \t}, []);\n// \treturn (\n// \t\t\tprops.muted ? (\n// \t\t\t\t<StyledVideo muted playsInline autoPlay ref={ ref } />\n// \t\t\t) : (\n// \t\t\t\t<StyledVideo playsInline autoPlay ref={ ref } />\n// \t\t\t)\n// \t);\n// }\n// function Room(props) {\n// \t\tconst [name, setName] = useState(\"\");\n// \t\tconst [mic, setMic] = useState(true);\n// \t\tconst [cam, setCam] = useState(true);\n// \t\tconst [joinedRoom, setJoinedRoom] = useState(false);\n// \t\tconst [users, setUsers] = useState([]);\n// \t\tconst [peers, setPeers] = useState([]);\n// \t\tconst [connected, setConnected] = useState({});\n// \t\tconst peersRef = useRef([]);\n// \t\tconst myVideo = useRef([]);\n//     const roomID = props.match.params.roomID;\n// \t\tuseEffect(() => {\n// \t\t\tconst getUserMedia = async () => {\n// \t\t\t\ttry {\n// \t\t\t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n// \t\t\t\t\tsocket.emit(\"join room\", roomID);\n// \t\t\t\t\tmyVideo.current.srcObject = stream;\n// \t\t\t\t\tif (!cam) {\n// \t\t\t\t\t\tcameraOnOff();\n// \t\t\t\t\t}\n// \t\t\t\t\tif (!mic) {\n// \t\t\t\t\t\tmuteUnmute();\n// \t\t\t\t\t}\n// \t\t\t\t} catch (err) {\n// \t\t\t\t\tconsole.log(err)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tgetUserMedia().then(stream => {\n// \t\t\t\tsocket.on(\"all users\", users => {\n// \t\t\t\t\tconst peers = [];\n// \t\t\t\t\tusers.forEach(userID => {\n// \t\t\t\t\t\tconst peer = createPeer(userID, socket.id, stream);\n// \t\t\t\t\t\tpeersRef.current.push({\n// \t\t\t\t\t\t\tpeerID: userID,\n// \t\t\t\t\t\t\tpeer,\n// \t\t\t\t\t\t})\n// \t\t\t\t\t\tpeers.push({\n// \t\t\t\t\t\t\tpeerID: userID,\n// \t\t\t\t\t\t\tpeer,\n// \t\t\t\t\t\t});\n// \t\t\t\t\t})\n// \t\t\t\t\tsetPeers(peers);\n// \t\t\t\t})\n// \t\t\t\tsocket.on(\"user joined\", payload => {\n// \t\t\t\t\tconst peer = addPeer(payload.signal, payload.callerID, stream);\n// \t\t\t\t\tpeersRef.current.push({\n// \t\t\t\t\t\tpeerID: payload.callerID,\n// \t\t\t\t\t\tpeer,\n// \t\t\t\t\t})\n// \t\t\t\t\tconst peerObj = {\n// \t\t\t\t\t\tpeer,\n// \t\t\t\t\t\tpeerID: payload.callerID,\n// \t\t\t\t\t}\n// \t\t\t\t\tsetPeers(users => [...users, peerObj]);\n// \t\t\t\t});\n// \t\t\t\tsocket.on(\"receiving returned signal\", payload => {\n// \t\t\t\t\tconst item = peersRef.current.find(p => p.peerID === payload.id);\n// \t\t\t\t\titem.peer.signal(payload.signal);\n// \t\t\t\t});\n// \t\t\t\tsocket.on(\"user left\", id => {\n// \t\t\t\t\tconst peerObj = peersRef.current.find(p => p.peerID === id);\n// \t\t\t\t\tif (peerObj) {\n// \t\t\t\t\t\tpeerObj.peer.destroy();\n// \t\t\t\t\t}\n// \t\t\t\t\tconst peers = peersRef.current.filter(p => p.peerID !== id);\n// \t\t\t\t\tpeersRef.current = peers;\n// \t\t\t\t\tsetPeers(peers);\n// \t\t\t\t})\t\n// \t\t\t});\n// \t\t}, [myVideo.current]);\n// \tuseEffect(() => {\n// \t\tsocket.on('receive move', (data) => {\n// \t\t\tsetUsers(data.all);\n// \t\t\tfor (let i = 0; i < data.all.length; i ++) {\n// \t\t\t\tif (data.all[i].id === data.me.id) {\n// \t\t\t\t\tcontinue;\n// \t\t\t\t}\n// \t\t\t\tlet closer = proximity(data.all[i], data.me)\n// \t\t\t\tif (closer && connected[data.all[i].id] === undefined) {\n// \t\t\t\t\tconnectPeer(data.all[i], data.me);\n// \t\t\t\t} else if (!closer && connected[data.all[i].id] !== undefined) {\n// \t\t\t\t\tdisconnectPeer(data.all[i], data.me);\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n// \t}, [socket]);\n// \tconst createPeer = (userToSignal, callerID, stream) => {\n// \t\tconst peer = new Peer({\n// \t\t\tinitiator: true,\n// \t\t\ttrickle: false,\n// \t\t\tstream\n// \t\t})\n// \t\tpeer.on('signal', signal => {\n// \t\t\tsocket.emit('sending signal', { userToSignal, callerID, signal })\n// \t\t})\n// \t\treturn peer;\n// \t}\n// \tconst addPeer = (incomingSignal, callerID, stream) => {\n// \t\tconst peer = new Peer({\n// \t\t\tinitiator: false, \n// \t\t\ttrickle: false,\n// \t\t\tstream\n// \t\t})\n// \t\tpeer.on('signal', signal => {\n// \t\t\tsocket.emit('returning signal', { signal, callerID })\n// \t\t})\n// \t\tpeer.signal(incomingSignal);\n// \t\treturn peer;\n// \t}\n// \tlet setup = (p5, canvas) => {\n// \t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n// \t\tlet tempUsers = [];\n// \t\ttempUsers.push({\n// \t\t\tid: socket.id,\n// \t\t\troom: roomID,\n// \t\t\tx: 400,\n// \t\t\ty: 100\n// \t\t});\n// \t\tsetUsers(tempUsers);\n// \t}\n// \tlet draw = (p5) => {\n// \t\tp5.background(\"rgb(255, 255, 255)\");\n// \t\tlet idx = users.findIndex((user) => user.id === socket.id)\n// \t\tif (idx !== -1) {\n// \t\t\tlet tempUsers = users;\n// \t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n// \t\t\t}\t\n// \t\t\tlet data = {\n// \t\t\t\tid: socket.id,\n// \t\t\t\troom: roomID,\n// \t\t\t\tx: tempUsers[idx].x,\n// \t\t\t\ty: tempUsers[idx].y\t\n// \t\t\t}\n// \t\t\tsetUsers(tempUsers);\n// \t\t\tsocket.emit('send move', data);\n// \t\t}\n// \t\tfor (let i = 0; i < users.length; i ++) {\n// \t\t\tp5.circle(users[i].x, users[i].y, 16);\n// \t\t}\n// \t}\n// const muteUnmute = (e) => {\n// \tconst enabled = myVideo.current.stcObject.getAudioTracks()[0].enabled;\n// \tif (enabled) {\n// \t\tmyVideo.current.srcObject.getAudioTracks()[0].enabled = false;\t\n// \t} else {\n// \t\tmyVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n// \t}\n// }\n// const cameraOnOff = (e) => {\n// \tconst enabled = myVideo.current.srcObject.getVideoTracks()[0].enabled;\n// \tif (enabled) {\n// \t\tmyVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n// \t} else {\n// \t\tmyVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n// \t}\n// }\n// const screenShare = (e) => {\n// }\n// const stopScreenShare = () => {\n// }\n// const proximity = (user, me) => {\n// \tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n// \t\treturn true;\n// \t} else {\n// \t\treturn false;\n// \t}\n// }\n// \tconst connectPeer = (user, me) => {\n// \t\tlet temp = connected;\n// \t\ttemp[user.id] = true;\n// \t\tsetConnected(temp);\n// \t\treturn;\n// \t}\n// \tconst disconnectPeer = (user) => {\n// \t\tlet temp = connected;\n// \t\tdelete temp[user.id]\n// \t\tsetConnected(temp);\n// \t\treturn;\n// \t}\n// return (\n// \t<div>\n// \t\t{ joinedRoom ? (\n// \t\t\t<div className=\"room\">\n// \t\t\t\t<div className=\"video-canvas\">\n// \t\t\t\t\t<div className=\"videobox\">\n// \t\t\t\t\t\t<div className=\"buttonbox\">\n// \t\t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n// \t\t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n// \t\t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<StyledVideo muted ref={ myVideo } autoPlay playsInLine />\n// \t\t\t\t\t\t<div className=\"videos\">\n// \t\t\t\t\t\t\t{ peers.map((peer, idx) => {\n// \t\t\t\t\t\t\t\treturn(\n// \t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t{ console.log(peer) }\n// \t\t\t\t\t\t\t\t\t\t<Video peer={ peer.peer } key={ peer.peerID }/>\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t})}\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n// \t\t\t\t</div>\n// \t\t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } name={ name } />\n// \t\t\t</div>\n// \t\t\t) : (\n// \t\t\t\t<RoomSetup \n// \t\t\t\t\tsetJoinedRoom={ () => setJoinedRoom(true) } \n// \t\t\t\t\tsetMic={ preference => setMic(preference) } \n// \t\t\t\t\tsetCam={ preference => setCam(preference) } \n// \t\t\t\t\tsetName={ name => setName(name) }\n// \t\t\t\t/>\n// \t\t\t)\n// \t\t}\n// \t</div>\n// );\n// };\n// export default Room;","map":{"version":3,"sources":["/Users/shubhamkapoor/gather-video-chat/server/client/src/Room.js"],"names":["React","useEffect","useRef","useState","io","Peer","Sketch","styled","Chat","RoomSetup","socket","connect","StyledVideo","video","Video","props","ref","console","log","peer","current","srcObject","streams","Room","name","setName","mic","setMic","cam","setCam","joinedRoom","setJoinedRoom","nearby","setNearby","users","setUsers","userVideo","peersRef","trackPeers","roomID","match","params","navigator","mediaDevices","getUserMedia","audio","then","stream","emit","on","forEach","userID","createPeer","id","push","peerID","payload","addPeer","signal","callerID","item","find","p","peerObj","destroy","peers","filter","tempNearby","userToSignal","initiator","trickle","incomingSignal","data","all","me","i","length","proximity","j","muteUnmute","e","enabled","getAudioTracks","cameraOnOff","getVideoTracks","screenShare","stopScreenShare","user","x","y","setup","p5","canvas","canv","createCanvas","parent","tempUsers","room","draw","background","idx","findIndex","keyIsDown","circle","map"],"mappings":"0XAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,MAAO,YAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,wFAEA,GAAMC,CAAAA,MAAM,CAAGN,EAAE,CAACO,OAAH,CAAW,uBAAX,CAAf,CAEA,GAAMC,CAAAA,WAAW,CAAGL,MAAM,CAACM,KAAV,0GAAjB,CAKA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACvB,GAAMC,CAAAA,GAAG,CAAGd,MAAM,EAAlB,CAEAD,SAAS,CAAC,UAAM,CAChBgB,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,IAAlB,EACAH,GAAG,CAACI,OAAJ,CAAYC,SAAZ,CAAwBN,KAAK,CAACI,IAAN,CAAWG,OAAX,CAAmB,CAAnB,CAAxB,CACC,CAHQ,CAGN,EAHM,CAAT,CAKA,mBACC,KAAC,WAAD,EAAa,WAAW,KAAxB,CAAyB,QAAQ,KAAjC,CAAkC,GAAG,CAAGN,GAAxC,EADD,CAGD,CAXD,CAaA,QAASO,CAAAA,IAAT,CAAcR,KAAd,CAAqB,CACrB,cAAwBZ,QAAQ,CAAC,EAAD,CAAhC,wCAAOqB,IAAP,eAAaC,OAAb,eACA,eAAsBtB,QAAQ,CAAC,IAAD,CAA9B,yCAAOuB,GAAP,eAAYC,MAAZ,eACA,eAAsBxB,QAAQ,CAAC,IAAD,CAA9B,yCAAOyB,GAAP,eAAYC,MAAZ,eACA,eAAoC1B,QAAQ,CAAC,KAAD,CAA5C,yCAAO2B,UAAP,eAAmBC,aAAnB,eAEA,eAA4B5B,QAAQ,CAAC,EAAD,CAApC,0CAAO6B,MAAP,gBAAeC,SAAf,gBACA,gBAA0B9B,QAAQ,CAAC,EAAD,CAAlC,2CAAO+B,KAAP,gBAAcC,QAAd,gBACA,GAAMC,CAAAA,SAAS,CAAGlC,MAAM,EAAxB,CACA,GAAMmC,CAAAA,QAAQ,CAAGnC,MAAM,CAAC,EAAD,CAAvB,CACA,GAAMoC,CAAAA,UAAU,CAAGpC,MAAM,CAAC,EAAD,CAAzB,CACA,GAAMqC,CAAAA,MAAM,CAAGxB,KAAK,CAACyB,KAAN,CAAYC,MAAZ,CAAmBF,MAAlC,CAEAtC,SAAS,CAAC,UAAM,CACfyC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC,CAAE/B,KAAK,CAAE,IAAT,CAAegC,KAAK,CAAE,IAAtB,CAApC,EAAkEC,IAAlE,CAAuE,SAAAC,MAAM,CAAI,CAChFX,SAAS,CAAChB,OAAV,CAAkBC,SAAlB,CAA8B0B,MAA9B,CACArC,MAAM,CAACsC,IAAP,CAAY,WAAZ,CAAyBT,MAAzB,EACA7B,MAAM,CAACuC,EAAP,CAAU,WAAV,CAAuB,SAAAf,KAAK,CAAI,CAC/BA,KAAK,CAACgB,OAAN,CAAc,SAAAC,MAAM,CAAI,CACvB,GAAMhC,CAAAA,IAAI,CAAGiC,UAAU,CAACD,MAAD,CAASzC,MAAM,CAAC2C,EAAhB,CAAoBN,MAApB,CAAvB,CACAV,QAAQ,CAACjB,OAAT,CAAiBkC,IAAjB,CAAsB,CACrBC,MAAM,CAAEJ,MADa,CAErBhC,IAAI,CAAJA,IAFqB,CAAtB,EAIA,CAND,EAOA,CARD,EAUAT,MAAM,CAACuC,EAAP,CAAU,aAAV,CAAyB,SAAAO,OAAO,CAAI,CACnC,GAAMrC,CAAAA,IAAI,CAAGsC,OAAO,CAACD,OAAO,CAACE,MAAT,CAAiBF,OAAO,CAACG,QAAzB,CAAmCZ,MAAnC,CAApB,CACAV,QAAQ,CAACjB,OAAT,CAAiBkC,IAAjB,CAAsB,CACrBC,MAAM,CAAEC,OAAO,CAACG,QADK,CAErBxC,IAAI,CAAJA,IAFqB,CAAtB,EAIA,CAND,EAQAT,MAAM,CAACuC,EAAP,CAAU,2BAAV,CAAuC,SAAAO,OAAO,CAAI,CACjD,GAAMI,CAAAA,IAAI,CAAGvB,QAAQ,CAACjB,OAAT,CAAiByC,IAAjB,CAAsB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACP,MAAF,GAAaC,OAAO,CAACH,EAAzB,EAAvB,CAAb,CACAO,IAAI,CAACzC,IAAL,CAAUuC,MAAV,CAAiBF,OAAO,CAACE,MAAzB,EACA,CAHD,EAKAhD,MAAM,CAACuC,EAAP,CAAU,WAAV,CAAuB,SAAAI,EAAE,CAAI,CAC5B,GAAMU,CAAAA,OAAO,CAAG1B,QAAQ,CAACjB,OAAT,CAAiByC,IAAjB,CAAsB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACP,MAAF,GAAaF,EAAjB,EAAvB,CAAhB,CACA,GAAIU,OAAJ,CAAa,CACZA,OAAO,CAAC5C,IAAR,CAAa6C,OAAb,GACA,CACD,GAAMC,CAAAA,KAAK,CAAG5B,QAAQ,CAACjB,OAAT,CAAiB8C,MAAjB,CAAwB,SAAAJ,CAAC,QAAIA,CAAAA,CAAC,CAACP,MAAF,GAAaF,EAAjB,EAAzB,CAAd,CACA,GAAMc,CAAAA,UAAU,CAAGnC,MAAM,CAACkC,MAAP,CAAc,SAAAJ,CAAC,QAAIA,CAAAA,CAAC,CAACP,MAAF,GAAaF,EAAjB,EAAf,CAAnB,CACAhB,QAAQ,CAACjB,OAAT,CAAmB6C,KAAnB,CACAhC,SAAS,CAACkC,UAAD,CAAT,CACA,CATD,EAUA,CApCD,EAqCA,CAtCQ,CAsCN,EAtCM,CAAT,CAwCA,GAAMf,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACgB,YAAD,CAAeT,QAAf,CAAyBZ,MAAzB,CAAoC,CACtD,GAAM5B,CAAAA,IAAI,CAAG,GAAId,CAAAA,IAAJ,CAAS,CACrBgE,SAAS,CAAE,IADU,CAErBC,OAAO,CAAE,KAFY,CAGrBvB,MAAM,CAANA,MAHqB,CAAT,CAAb,CAMA5B,IAAI,CAAC8B,EAAL,CAAQ,QAAR,CAAkB,SAAAS,MAAM,CAAI,CAC3BhD,MAAM,CAACsC,IAAP,CAAY,gBAAZ,CAA8B,CAAEoB,YAAY,CAAZA,YAAF,CAAgBT,QAAQ,CAARA,QAAhB,CAA0BD,MAAM,CAANA,MAA1B,CAA9B,EACA,CAFD,EAIA,MAAOvC,CAAAA,IAAP,CACA,CAZD,CAcA,GAAMsC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACc,cAAD,CAAiBZ,QAAjB,CAA2BZ,MAA3B,CAAsC,CACrD,GAAM5B,CAAAA,IAAI,CAAG,GAAId,CAAAA,IAAJ,CAAS,CACrBgE,SAAS,CAAE,KADU,CAErBC,OAAO,CAAE,KAFY,CAGrBvB,MAAM,CAANA,MAHqB,CAAT,CAAb,CAMA5B,IAAI,CAAC8B,EAAL,CAAQ,QAAR,CAAkB,SAAAS,MAAM,CAAI,CAC3BhD,MAAM,CAACsC,IAAP,CAAY,kBAAZ,CAAgC,CAAEU,MAAM,CAANA,MAAF,CAAUC,QAAQ,CAARA,QAAV,CAAhC,EACA,CAFD,EAIAxC,IAAI,CAACuC,MAAL,CAAYa,cAAZ,EAEA,MAAOpD,CAAAA,IAAP,CACA,CAdD,CAgBAlB,SAAS,CAAC,UAAM,CACfS,MAAM,CAACuC,EAAP,CAAU,cAAV,CAA0B,SAACuB,IAAD,CAAU,CACnCrC,QAAQ,CAACqC,IAAI,CAACC,GAAN,CAAR,CAEA,GAAIC,CAAAA,EAAE,CAAG,EAAT,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,IAAI,CAACC,GAAL,CAASG,MAA7B,CAAqCD,CAAC,EAAtC,CAA2C,CAC1C,GAAIH,IAAI,CAACC,GAAL,CAASE,CAAT,EAAYtB,EAAZ,GAAmB3C,MAAM,CAAC2C,EAA9B,CAAkC,CACjCqB,EAAE,CAAGF,IAAI,CAACC,GAAL,CAASE,CAAT,CAAL,CACA,MACA,CACD,CAED,GAAIR,CAAAA,UAAU,CAAG,EAAjB,CACA,IAAK,GAAIQ,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAGH,IAAI,CAACC,GAAL,CAASG,MAA7B,CAAqCD,EAAC,EAAtC,CAA2C,CAC1C,GAAIH,IAAI,CAACC,GAAL,CAASE,EAAT,EAAYtB,EAAZ,GAAmB3C,MAAM,CAAC2C,EAA9B,CAAkC,CACjC,SACA,CACD,GAAIwB,SAAS,CAACL,IAAI,CAACC,GAAL,CAASE,EAAT,CAAD,CAAcD,EAAd,CAAb,CAAgC,CAC/B,IAAK,GAAII,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGzC,QAAQ,CAACjB,OAAT,CAAiBwD,MAArC,CAA6CE,CAAC,EAA9C,CAAmD,CAClD,GAAIzC,QAAQ,CAACjB,OAAT,CAAiB0D,CAAjB,EAAoBvB,MAApB,GAA+BiB,IAAI,CAACC,GAAL,CAASE,EAAT,EAAYtB,EAA/C,CAAmD,CAClDc,UAAU,CAACb,IAAX,CAAgBjB,QAAQ,CAACjB,OAAT,CAAiB0D,CAAjB,CAAhB,EACA,CACD,CACD,CACD,CAED7C,SAAS,CAACkC,UAAD,CAAT,CACA,CA1BD,EA2BA,CA5BQ,CA4BN,CAACzD,MAAD,CA5BM,CAAT,CA+BA,GAAMqE,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,CAAD,CAAO,CACzB,GAAMC,CAAAA,OAAO,CAAG7C,SAAS,CAAChB,OAAV,CAAkBC,SAAlB,CAA4B6D,cAA5B,GAA6C,CAA7C,EAAgDD,OAAhE,CACA,GAAIA,OAAJ,CAAa,CACZ7C,SAAS,CAAChB,OAAV,CAAkBC,SAAlB,CAA4B6D,cAA5B,GAA6C,CAA7C,EAAgDD,OAAhD,CAA0D,KAA1D,CACA,CAFD,IAEO,CACN7C,SAAS,CAAChB,OAAV,CAAkBC,SAAlB,CAA4B6D,cAA5B,GAA6C,CAA7C,EAAgDD,OAAhD,CAA0D,IAA1D,CACA,CACD,CAPD,CASA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACH,CAAD,CAAO,CAC1B,GAAMC,CAAAA,OAAO,CAAG7C,SAAS,CAAChB,OAAV,CAAkBC,SAAlB,CAA4B+D,cAA5B,GAA6C,CAA7C,EAAgDH,OAAhE,CACA,GAAIA,OAAJ,CAAa,CACZ7C,SAAS,CAAChB,OAAV,CAAkBC,SAAlB,CAA4B+D,cAA5B,GAA6C,CAA7C,EAAgDH,OAAhD,CAA0D,KAA1D,CACA,CAFD,IAEO,CACN7C,SAAS,CAAChB,OAAV,CAAkBC,SAAlB,CAA4B+D,cAA5B,GAA6C,CAA7C,EAAgDH,OAAhD,CAA0D,IAA1D,CACA,CACD,CAPD,CASA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACL,CAAD,CAAO,CAE1B,CAFD,CAIA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAE7B,CAFD,CAIA,GAAMT,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACU,IAAD,CAAOb,EAAP,CAAc,CAC/B,GAAI,CAACa,IAAI,CAACC,CAAL,CAASd,EAAE,CAACc,CAAb,GAAmBD,IAAI,CAACC,CAAL,CAASd,EAAE,CAACc,CAA/B,EAAoC,CAACD,IAAI,CAACE,CAAL,CAASf,EAAE,CAACe,CAAb,GAAmBF,IAAI,CAACE,CAAL,CAASf,EAAE,CAACe,CAA/B,CAApC,EAAyE,KAA7E,CAAoF,CACnF,MAAO,KAAP,CACA,CAFD,IAEO,CACN,MAAO,MAAP,CACA,CACD,CAND,CAQA,GAAIC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,EAAD,CAAKC,MAAL,CAAgB,CAC5B,GAAIC,CAAAA,IAAI,CAAGF,EAAE,CAACG,YAAH,CAAgB,GAAhB,CAAqB,GAArB,EAA0BC,MAA1B,CAAiCH,MAAjC,CAAX,CACA,GAAII,CAAAA,SAAS,CAAG,EAAhB,CACAA,SAAS,CAAC1C,IAAV,CAAe,CACdD,EAAE,CAAE3C,MAAM,CAAC2C,EADG,CAEd4C,IAAI,CAAE1D,MAFQ,CAGdiD,CAAC,CAAE,GAHW,CAIdC,CAAC,CAAE,GAJW,CAAf,EAOAtD,QAAQ,CAAC6D,SAAD,CAAR,CACC,CAXD,CAaA,GAAIE,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACP,EAAD,CAAQ,CACnBA,EAAE,CAACQ,UAAH,CAAc,oBAAd,EAEA,GAAIC,CAAAA,GAAG,CAAGlE,KAAK,CAACmE,SAAN,CAAgB,SAACd,IAAD,QAAUA,CAAAA,IAAI,CAAClC,EAAL,GAAY3C,MAAM,CAAC2C,EAA7B,EAAhB,CAAV,CACA,GAAI+C,GAAG,GAAK,CAAC,CAAb,CAAgB,CACf,GAAIJ,CAAAA,SAAS,CAAG9D,KAAhB,CAEA,GAAIyD,EAAE,CAACW,SAAH,CAAa,EAAb,GAAoBX,EAAE,CAACW,SAAH,CAAa,EAAb,CAAxB,CAA0C,CACzCN,SAAS,CAACI,GAAD,CAAT,CAAeX,CAAf,CAAmBO,SAAS,CAACI,GAAD,CAAT,CAAeX,CAAf,CAAmB,CAAtC,CACA,CACD,GAAIE,EAAE,CAACW,SAAH,CAAa,EAAb,GAAoBX,EAAE,CAACW,SAAH,CAAa,EAAb,CAAxB,CAA0C,CACzCN,SAAS,CAACI,GAAD,CAAT,CAAeZ,CAAf,CAAmBQ,SAAS,CAACI,GAAD,CAAT,CAAeZ,CAAf,CAAmB,CAAtC,CACA,CACD,GAAIG,EAAE,CAACW,SAAH,CAAa,EAAb,GAAoBX,EAAE,CAACW,SAAH,CAAa,EAAb,CAAxB,CAA0C,CACzCN,SAAS,CAACI,GAAD,CAAT,CAAeX,CAAf,CAAmBO,SAAS,CAACI,GAAD,CAAT,CAAeX,CAAf,CAAmB,CAAtC,CACA,CACD,GAAIE,EAAE,CAACW,SAAH,CAAa,EAAb,GAAoBX,EAAE,CAACW,SAAH,CAAa,EAAb,CAAxB,CAA0C,CACzCN,SAAS,CAACI,GAAD,CAAT,CAAeZ,CAAf,CAAmBQ,SAAS,CAACI,GAAD,CAAT,CAAeZ,CAAf,CAAmB,CAAtC,CACA,CAEDrD,QAAQ,CAAC6D,SAAD,CAAR,CACA,GAAIxB,CAAAA,IAAI,CAAG,CACVnB,EAAE,CAAE3C,MAAM,CAAC2C,EADD,CAEV4C,IAAI,CAAE1D,MAFI,CAGViD,CAAC,CAAEQ,SAAS,CAACI,GAAD,CAAT,CAAeZ,CAHR,CAIVC,CAAC,CAAEO,SAAS,CAACI,GAAD,CAAT,CAAeX,CAJR,CAAX,CAMA/E,MAAM,CAACsC,IAAP,CAAY,WAAZ,CAAyBwB,IAAzB,EACA,CACD,IAAK,GAAIG,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGzC,KAAK,CAAC0C,MAA1B,CAAkCD,CAAC,EAAnC,CAAwC,CACvCgB,EAAE,CAACY,MAAH,CAAUrE,KAAK,CAACyC,CAAD,CAAL,CAASa,CAAnB,CAAsBtD,KAAK,CAACyC,CAAD,CAAL,CAASc,CAA/B,CAAkC,EAAlC,EACA,CACA,CAhCD,CAkCA,mBACA,aAAK,SAAS,CAAC,MAAf,wBACC,aAAK,SAAS,CAAC,cAAf,wBACC,aAAK,SAAS,CAAC,WAAf,wBACC,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,MAAhC,CAAuC,OAAO,CAAG,iBAACT,CAAD,QAAOD,CAAAA,UAAU,CAACC,CAAD,CAAjB,EAAjD,oBADD,cAEE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,QAAhC,CAAyC,OAAO,CAAG,iBAACA,CAAD,QAAOG,CAAAA,WAAW,CAACH,CAAD,CAAlB,EAAnD,sBAFF,cAGE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,aAAhC,CAA8C,OAAO,CAAG,iBAACA,CAAD,QAAOK,CAAAA,WAAW,CAACL,CAAD,CAAlB,EAAxD,2BAHF,cAIC,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,OAAhC,CAAwC,OAAO,CAAG,iBAACA,CAAD,QAAO/D,CAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAQ,CAACjB,OAArB,CAAP,EAAlD,qBAJD,GADD,cAOC,aAAK,SAAS,CAAC,UAAf,wBACC,KAAC,WAAD,EAAa,KAAK,KAAlB,CAAmB,GAAG,CAAGgB,SAAzB,CAAqC,QAAQ,KAA7C,CAA8C,WAAW,KAAzD,EADD,CAEGJ,MAAM,CAACwE,GAAP,CAAW,SAACrF,IAAD,CAAU,CACtB,mBACC,KAAC,KAAD,EAAO,IAAI,CAAGA,IAAI,CAACA,IAAnB,EADD,CAGA,CAJC,CAFH,GAPD,cAeC,KAAC,MAAD,EAAQ,KAAK,CAAGuE,KAAhB,CAAwB,IAAI,CAAGQ,IAA/B,CAAsC,SAAS,CAAC,QAAhD,EAfD,GADD,cAkBC,KAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,CAAuB,MAAM,CAAGxF,MAAhC,CAAyC,IAAI,CAAG6B,MAAhD,EAlBD,GADA,CAsBC,EAED,cAAehB,CAAAA,IAAfsourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from './Chat';\nimport RoomSetup from './RoomSetup';\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nconst StyledVideo = styled.video`\n    height: 300px;\n    width: 300px;\n`;\n\nconst Video = (props) => {\n  const ref = useRef();\n\n  useEffect(() => {\n\t\tconsole.log(props.peer);\n\t\tref.current.srcObject = props.peer.streams[0];\n  }, []);\n\n  return (\n  \t<StyledVideo playsInline autoPlay ref={ ref } />\n  );\n}\n\nfunction Room(props) {\nconst [name, setName] = useState(\"\");\nconst [mic, setMic] = useState(true);\nconst [cam, setCam] = useState(true);\nconst [joinedRoom, setJoinedRoom] = useState(false);\n\nconst [nearby, setNearby] = useState([]);\nconst [users, setUsers] = useState([]);\nconst userVideo = useRef();\nconst peersRef = useRef([]);\nconst trackPeers = useRef([]);\nconst roomID = props.match.params.roomID;\n\nuseEffect(() => {\n\tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n\t\tuserVideo.current.srcObject = stream;\n\t\tsocket.emit(\"join room\", roomID);\n\t\tsocket.on(\"all users\", users => {\n\t\t\tusers.forEach(userID => {\n\t\t\t\tconst peer = createPeer(userID, socket.id, stream);\n\t\t\t\tpeersRef.current.push({\n\t\t\t\t\tpeerID: userID,\n\t\t\t\t\tpeer,\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\n\t\tsocket.on(\"user joined\", payload => {\n\t\t\tconst peer = addPeer(payload.signal, payload.callerID, stream);\n\t\t\tpeersRef.current.push({\n\t\t\t\tpeerID: payload.callerID,\n\t\t\t\tpeer,\n\t\t\t})\n\t\t});\n\n\t\tsocket.on(\"receiving returned signal\", payload => {\n\t\t\tconst item = peersRef.current.find(p => p.peerID === payload.id);\n\t\t\titem.peer.signal(payload.signal);\n\t\t});\n\n\t\tsocket.on(\"user left\", id => {\n\t\t\tconst peerObj = peersRef.current.find(p => p.peerID === id);\n\t\t\tif (peerObj) {\n\t\t\t\tpeerObj.peer.destroy();\n\t\t\t}\n\t\t\tconst peers = peersRef.current.filter(p => p.peerID !== id);\n\t\t\tconst tempNearby = nearby.filter(p => p.peerID !== id);\n\t\t\tpeersRef.current = peers;\n\t\t\tsetNearby(tempNearby);\n\t\t})\n\t})\n}, []);\n\nconst createPeer = (userToSignal, callerID, stream) => {\n\tconst peer = new Peer({\n\t\tinitiator: true,\n\t\ttrickle: false,\n\t\tstream,\n\t});\n\n\tpeer.on(\"signal\", signal => {\n\t\tsocket.emit(\"sending signal\", { userToSignal, callerID, signal })\n\t})\n\n\treturn peer;\n}\n\nconst addPeer = (incomingSignal, callerID, stream) => {\n\tconst peer = new Peer({\n\t\tinitiator: false,\n\t\ttrickle: false,\n\t\tstream,\n\t})\n\n\tpeer.on(\"signal\", signal => {\n\t\tsocket.emit(\"returning signal\", { signal, callerID })\n\t})\n\n\tpeer.signal(incomingSignal);\n\n\treturn peer;\n}\n\nuseEffect(() => {\n\tsocket.on('receive move', (data) => {\n\t\tsetUsers(data.all);\n\n\t\tvar me = {};\n\t\tfor (let i = 0; i < data.all.length; i ++) {\n\t\t\tif (data.all[i].id === socket.id) {\n\t\t\t\tme = data.all[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvar tempNearby = [];\n\t\tfor (let i = 0; i < data.all.length; i ++) {\n\t\t\tif (data.all[i].id === socket.id) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (proximity(data.all[i], me)) {\n\t\t\t\tfor (var j = 0; j < peersRef.current.length; j ++) {\n\t\t\t\t\tif (peersRef.current[j].peerID === data.all[i].id) {\n\t\t\t\t\t\ttempNearby.push(peersRef.current[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetNearby(tempNearby);\n\t})\n}, [socket]);\n\n\nconst muteUnmute = (e) => {\n\tconst enabled = userVideo.current.srcObject.getAudioTracks()[0].enabled;\n\tif (enabled) {\n\t\tuserVideo.current.srcObject.getAudioTracks()[0].enabled = false;\t\n\t} else {\n\t\tuserVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n\t}\n}\n\nconst cameraOnOff = (e) => {\n\tconst enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n\tif (enabled) {\n\t\tuserVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n\t} else {\n\t\tuserVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n\t}\n}\n\nconst screenShare = (e) => {\n\n}\n\nconst stopScreenShare = () => {\n\n}\n\nconst proximity = (user, me) => {\n\tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nlet setup = (p5, canvas) => {\nlet canv = p5.createCanvas(800, 600).parent(canvas);\nlet tempUsers = [];\ntempUsers.push({\n\tid: socket.id,\n\troom: roomID,\n\tx: 400,\n\ty: 100\n});\n\nsetUsers(tempUsers);\n}\n\nlet draw = (p5) => {\np5.background(\"rgb(255, 255, 255)\");\n\nlet idx = users.findIndex((user) => user.id === socket.id)\nif (idx !== -1) {\n\tlet tempUsers = users;\n\n\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n\t}\n\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n\t}\n\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n\t}\n\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n\t}\t\n\t\n\tsetUsers(tempUsers);\n\tlet data = {\n\t\tid: socket.id,\n\t\troom: roomID,\n\t\tx: tempUsers[idx].x,\n\t\ty: tempUsers[idx].y\t\n\t}\n\tsocket.emit('send move', data);\n}\nfor (let i = 0; i < users.length; i ++) {\n\tp5.circle(users[i].x, users[i].y, 16);\n}\n}\n\nreturn (\n<div className=\"room\">\n\t<div className=\"video-canvas\">\n\t\t<div className=\"buttonbox\">\n\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n\t\t  <button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n\t \t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n\t\t\t<button type=\"button\" className=\"debug\" onClick={ (e) => console.log(peersRef.current) }> Debug </button>\n\t\t</div>\n\t\t<div className=\"videobox\">\n\t\t\t<StyledVideo muted ref={ userVideo } autoPlay playsInline />\n\t\t\t{ nearby.map((peer) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Video peer={ peer.peer } />\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n\t</div>\n\t<Chat className=\"chat\" socket={ socket } room={ roomID } />\n</div>\n);\n};\n\nexport default Room;\n\n\n// import React, { useEffect, useRef, useState } from \"react\";\n// import io from \"socket.io-client\";\n// import Peer from \"simple-peer\";\n// import \"./Room.css\";\n// import Sketch from 'react-p5';\n// import styled from \"styled-components\";\n// import Chat from \"./Chat\";\n// import RoomSetup from './RoomSetup';\n\n// const socket = io.connect(\"http://localhost:3001\");\n\n// const StyledVideo = styled.video`\n// \theight: 300px;\n// \twidth: 300px;\n// `;\n\n// const Video = (props) => {\n// \tconst ref = useRef();\n\n// \tuseEffect(() => {\n// \t\tref.current.srcObject = props.peer;\n// \t}, []);\n\n// \treturn (\n// \t\t\tprops.muted ? (\n// \t\t\t\t<StyledVideo muted playsInline autoPlay ref={ ref } />\n// \t\t\t) : (\n// \t\t\t\t<StyledVideo playsInline autoPlay ref={ ref } />\n// \t\t\t)\n// \t);\n// }\n\n// function Room(props) {\n// \t\tconst [name, setName] = useState(\"\");\n// \t\tconst [mic, setMic] = useState(true);\n// \t\tconst [cam, setCam] = useState(true);\n// \t\tconst [joinedRoom, setJoinedRoom] = useState(false);\n\t\t\n// \t\tconst [users, setUsers] = useState([]);\n// \t\tconst [peers, setPeers] = useState([]);\n// \t\tconst [connected, setConnected] = useState({});\n// \t\tconst peersRef = useRef([]);\n// \t\tconst myVideo = useRef([]);\n//     const roomID = props.match.params.roomID;\n\n// \t\tuseEffect(() => {\n// \t\t\tconst getUserMedia = async () => {\n// \t\t\t\ttry {\n// \t\t\t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n// \t\t\t\t\tsocket.emit(\"join room\", roomID);\n// \t\t\t\t\tmyVideo.current.srcObject = stream;\n// \t\t\t\t\tif (!cam) {\n// \t\t\t\t\t\tcameraOnOff();\n// \t\t\t\t\t}\n// \t\t\t\t\tif (!mic) {\n// \t\t\t\t\t\tmuteUnmute();\n// \t\t\t\t\t}\n// \t\t\t\t} catch (err) {\n// \t\t\t\t\tconsole.log(err)\n// \t\t\t\t}\n// \t\t\t}\n\n// \t\t\tgetUserMedia().then(stream => {\n// \t\t\t\tsocket.on(\"all users\", users => {\n// \t\t\t\t\tconst peers = [];\n// \t\t\t\t\tusers.forEach(userID => {\n// \t\t\t\t\t\tconst peer = createPeer(userID, socket.id, stream);\n// \t\t\t\t\t\tpeersRef.current.push({\n// \t\t\t\t\t\t\tpeerID: userID,\n// \t\t\t\t\t\t\tpeer,\n// \t\t\t\t\t\t})\n// \t\t\t\t\t\tpeers.push({\n// \t\t\t\t\t\t\tpeerID: userID,\n// \t\t\t\t\t\t\tpeer,\n// \t\t\t\t\t\t});\n// \t\t\t\t\t})\n// \t\t\t\t\tsetPeers(peers);\n// \t\t\t\t})\n\t\n// \t\t\t\tsocket.on(\"user joined\", payload => {\n// \t\t\t\t\tconst peer = addPeer(payload.signal, payload.callerID, stream);\n// \t\t\t\t\tpeersRef.current.push({\n// \t\t\t\t\t\tpeerID: payload.callerID,\n// \t\t\t\t\t\tpeer,\n// \t\t\t\t\t})\n// \t\t\t\t\tconst peerObj = {\n// \t\t\t\t\t\tpeer,\n// \t\t\t\t\t\tpeerID: payload.callerID,\n// \t\t\t\t\t}\n// \t\t\t\t\tsetPeers(users => [...users, peerObj]);\n// \t\t\t\t});\n\t\n// \t\t\t\tsocket.on(\"receiving returned signal\", payload => {\n// \t\t\t\t\tconst item = peersRef.current.find(p => p.peerID === payload.id);\n// \t\t\t\t\titem.peer.signal(payload.signal);\n// \t\t\t\t});\n\t\n// \t\t\t\tsocket.on(\"user left\", id => {\n// \t\t\t\t\tconst peerObj = peersRef.current.find(p => p.peerID === id);\n// \t\t\t\t\tif (peerObj) {\n// \t\t\t\t\t\tpeerObj.peer.destroy();\n// \t\t\t\t\t}\n// \t\t\t\t\tconst peers = peersRef.current.filter(p => p.peerID !== id);\n// \t\t\t\t\tpeersRef.current = peers;\n// \t\t\t\t\tsetPeers(peers);\n// \t\t\t\t})\t\n// \t\t\t});\n// \t\t}, [myVideo.current]);\n\n// \tuseEffect(() => {\n// \t\tsocket.on('receive move', (data) => {\n// \t\t\tsetUsers(data.all);\n// \t\t\tfor (let i = 0; i < data.all.length; i ++) {\n// \t\t\t\tif (data.all[i].id === data.me.id) {\n// \t\t\t\t\tcontinue;\n// \t\t\t\t}\n\n// \t\t\t\tlet closer = proximity(data.all[i], data.me)\n\n// \t\t\t\tif (closer && connected[data.all[i].id] === undefined) {\n// \t\t\t\t\tconnectPeer(data.all[i], data.me);\n\n// \t\t\t\t} else if (!closer && connected[data.all[i].id] !== undefined) {\n// \t\t\t\t\tdisconnectPeer(data.all[i], data.me);\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n// \t}, [socket]);\n\n// \tconst createPeer = (userToSignal, callerID, stream) => {\n// \t\tconst peer = new Peer({\n// \t\t\tinitiator: true,\n// \t\t\ttrickle: false,\n// \t\t\tstream\n// \t\t})\n\n// \t\tpeer.on('signal', signal => {\n// \t\t\tsocket.emit('sending signal', { userToSignal, callerID, signal })\n// \t\t})\n\n// \t\treturn peer;\n// \t}\n\n// \tconst addPeer = (incomingSignal, callerID, stream) => {\n// \t\tconst peer = new Peer({\n// \t\t\tinitiator: false, \n// \t\t\ttrickle: false,\n// \t\t\tstream\n// \t\t})\n\n// \t\tpeer.on('signal', signal => {\n// \t\t\tsocket.emit('returning signal', { signal, callerID })\n// \t\t})\n\n// \t\tpeer.signal(incomingSignal);\n// \t\treturn peer;\n// \t}\n\n// \tlet setup = (p5, canvas) => {\n// \t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n// \t\tlet tempUsers = [];\n// \t\ttempUsers.push({\n// \t\t\tid: socket.id,\n// \t\t\troom: roomID,\n// \t\t\tx: 400,\n// \t\t\ty: 100\n// \t\t});\n\t\t\n// \t\tsetUsers(tempUsers);\n// \t}\n\n// \tlet draw = (p5) => {\n// \t\tp5.background(\"rgb(255, 255, 255)\");\n\n// \t\tlet idx = users.findIndex((user) => user.id === socket.id)\n// \t\tif (idx !== -1) {\n// \t\t\tlet tempUsers = users;\n\n// \t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n// \t\t\t}\t\n\t\t\t\n// \t\t\tlet data = {\n// \t\t\t\tid: socket.id,\n// \t\t\t\troom: roomID,\n// \t\t\t\tx: tempUsers[idx].x,\n// \t\t\t\ty: tempUsers[idx].y\t\n// \t\t\t}\n\n// \t\t\tsetUsers(tempUsers);\n// \t\t\tsocket.emit('send move', data);\n// \t\t}\n\n// \t\tfor (let i = 0; i < users.length; i ++) {\n// \t\t\tp5.circle(users[i].x, users[i].y, 16);\n// \t\t}\n// \t}\n\n\t// const muteUnmute = (e) => {\n\t// \tconst enabled = myVideo.current.stcObject.getAudioTracks()[0].enabled;\n\t// \tif (enabled) {\n\t// \t\tmyVideo.current.srcObject.getAudioTracks()[0].enabled = false;\t\n\t// \t} else {\n\t// \t\tmyVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n\t// \t}\n\t// }\n\n\t// const cameraOnOff = (e) => {\n\t// \tconst enabled = myVideo.current.srcObject.getVideoTracks()[0].enabled;\n\t// \tif (enabled) {\n\t// \t\tmyVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n\t// \t} else {\n\t// \t\tmyVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n\t// \t}\n\t// }\n\t\n\t// const screenShare = (e) => {\n\n\t// }\n\n\t// const stopScreenShare = () => {\n\n\t// }\n\n\t// const proximity = (user, me) => {\n\t// \tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n\t// \t\treturn true;\n\t// \t} else {\n\t// \t\treturn false;\n\t// \t}\n\t// }\n\n// \tconst connectPeer = (user, me) => {\n\t\t\n\t\t\n// \t\tlet temp = connected;\n// \t\ttemp[user.id] = true;\n// \t\tsetConnected(temp);\n// \t\treturn;\n// \t}\n\n// \tconst disconnectPeer = (user) => {\n\t\t\n\n// \t\tlet temp = connected;\n// \t\tdelete temp[user.id]\n// \t\tsetConnected(temp);\n// \t\treturn;\n// \t}\n\n  // return (\n\t// \t<div>\n\t// \t\t{ joinedRoom ? (\n\t// \t\t\t<div className=\"room\">\n\t// \t\t\t\t<div className=\"video-canvas\">\n\t// \t\t\t\t\t<div className=\"videobox\">\n\t// \t\t\t\t\t\t<div className=\"buttonbox\">\n\t// \t\t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n\t// \t\t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n\t// \t\t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n\t// \t\t\t\t\t\t</div>\n\t// \t\t\t\t\t\t<StyledVideo muted ref={ myVideo } autoPlay playsInLine />\n\t// \t\t\t\t\t\t<div className=\"videos\">\n\t// \t\t\t\t\t\t\t{ peers.map((peer, idx) => {\n\t// \t\t\t\t\t\t\t\treturn(\n\t// \t\t\t\t\t\t\t\t\t<div>\n\t// \t\t\t\t\t\t\t\t\t\t{ console.log(peer) }\n\t// \t\t\t\t\t\t\t\t\t\t<Video peer={ peer.peer } key={ peer.peerID }/>\n\t// \t\t\t\t\t\t\t\t\t</div>\n\t// \t\t\t\t\t\t\t\t)\n\t// \t\t\t\t\t\t\t})}\n\t// \t\t\t\t\t\t</div>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } name={ name } />\n\t// \t\t\t</div>\n\t// \t\t\t) : (\n\t// \t\t\t\t<RoomSetup \n\t// \t\t\t\t\tsetJoinedRoom={ () => setJoinedRoom(true) } \n\t// \t\t\t\t\tsetMic={ preference => setMic(preference) } \n\t// \t\t\t\t\tsetCam={ preference => setCam(preference) } \n\t// \t\t\t\t\tsetName={ name => setName(name) }\n\t// \t\t\t\t/>\n\t// \t\t\t)\n\t// \t\t}\n\t// \t</div>\n  // );\n// };\n\n// export default Room;"]},"metadata":{},"sourceType":"module"}