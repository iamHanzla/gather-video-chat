{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkapoor/gather-video-chat/client/src/RoomSetup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './RoomSetup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RoomSetup(props) {\n  _s();\n\n  const [mic, setMic] = useState(true);\n  const [cam, setCam] = useState(true);\n  const videoStream = useRef(null);\n  useEffect(() => {\n    const getUserMedia = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        videoStream.current.srcObject = stream;\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getUserMedia();\n  }, []);\n\n  const muteUnmute = e => {\n    if (mic) {\n      setMic(false);\n      props.setMic(false);\n    } else {\n      setMic(true);\n      props.setMic(true);\n    }\n\n    const enabled = videoStream.current.srcObject.getAudioTracks()[0].enabled;\n\n    if (enabled) {\n      videoStream.current.srcObject.getAudioTracks()[0].enabled = false;\n    } else {\n      videoStream.current.srcObject.getAudioTracks()[0].enabled = true;\n    }\n  };\n\n  const cameraOnOff = e => {\n    if (cam) {\n      setCam(false);\n      props.setCam(false);\n    } else {\n      setCam(true);\n      props.setCam(true);\n    }\n\n    const enabled = videoStream.current.srcObject.getVideoTracks()[0].enabled;\n\n    if (enabled) {\n      videoStream.current.srcObject.getVideoTracks()[0].enabled = false;\n    } else {\n      videoStream.current.srcObject.getVideoTracks()[0].enabled = true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roomsetup\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => props.setJoinedRoom(true),\n      children: \"Join\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => muteUnmute(e),\n      children: \"mute mic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => cameraOnOff(e),\n      children: \"turn off cam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"enter display name\",\n      onChange: e => props.setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      muted: true,\n      ref: videoStream,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n}\n\n_s(RoomSetup, \"WyFFMjkukOf+L0t3LidJaMGtO44=\");\n\n_c = RoomSetup;\nexport default RoomSetup;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomSetup\");","map":{"version":3,"sources":["/Users/shubhamkapoor/gather-video-chat/client/src/RoomSetup.js"],"names":["React","useState","useEffect","useRef","RoomSetup","props","mic","setMic","cam","setCam","videoStream","getUserMedia","stream","navigator","mediaDevices","video","audio","current","srcObject","err","console","log","muteUnmute","e","enabled","getAudioTracks","cameraOnOff","getVideoTracks","setJoinedRoom","setName","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport './RoomSetup.css'\n\nfunction RoomSetup(props) {\n\tconst [mic, setMic] = useState(true);\n\tconst [cam, setCam] = useState(true);\n\tconst videoStream = useRef(null);\n\n\tuseEffect(() => {\n\t\tconst getUserMedia = async () => {\n\t\t\ttry {\n\t\t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n\t\t\t\tvideoStream.current.srcObject = stream;\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err)\n\t\t\t}\n\t\t}\n\n\t\tgetUserMedia();\n\t}, []);\n\n\tconst muteUnmute = (e) => {\n\t\tif (mic) {\n\t\t\tsetMic(false);\n\t\t\tprops.setMic(false);\n\t\t} else {\n\t\t\tsetMic(true);\n\t\t\tprops.setMic(true);\n\t\t}\n\t\tconst enabled = videoStream.current.srcObject.getAudioTracks()[0].enabled;\n\t\tif (enabled) {\n\t\t\tvideoStream.current.srcObject.getAudioTracks()[0].enabled = false;\t\n\t\t} else {\n\t\t\tvideoStream.current.srcObject.getAudioTracks()[0].enabled = true;\n\t\t}\n\t}\n\n\tconst cameraOnOff = (e) => {\n\t\tif (cam) {\n\t\t\tsetCam(false);\n\t\t\tprops.setCam(false);\n\t\t} else {\n\t\t\tsetCam(true);\n\t\t\tprops.setCam(true);\n\t\t}\n\t\tconst enabled = videoStream.current.srcObject.getVideoTracks()[0].enabled;\n\t\tif (enabled) {\n\t\t\tvideoStream.current.srcObject.getVideoTracks()[0].enabled = false;\n\t\t} else {\n\t\t\tvideoStream.current.srcObject.getVideoTracks()[0].enabled = true;\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"roomsetup\">\n\t\t\t<button onClick={ (e) => props.setJoinedRoom(true) } > \n\t\t\t\tJoin\n\t\t\t</button>\n\t\t\t<button onClick={ (e) => muteUnmute(e) }>\n\t\t\t\tmute mic\n\t\t\t</button>\n\t\t\t<button onClick={ (e) => cameraOnOff(e) }>\n\t\t\t\tturn off cam\n\t\t\t</button>\n\t\t\t<input placeholder=\"enter display name\" onChange={ (e) => props.setName(e.target.value) }/>\n\t\t\t<video muted ref={ videoStream } autoPlay />\n\t\t</div>\n\t)\n}\n\nexport default RoomSetup"]},"metadata":{},"sourceType":"module"}