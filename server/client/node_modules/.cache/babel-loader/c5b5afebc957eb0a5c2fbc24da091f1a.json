{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkapoor/gather-video-chat/client/src/Room.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from \"./Chat\";\nimport RoomSetup from './RoomSetup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nconst StyledVideo = styled.video`\n\theight: 300px;\n\twidth: 300px;\n`;\n_c = StyledVideo;\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current.srcObject = props.peer;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledVideo, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c2 = Video;\n\nfunction Room(props) {\n  _s2();\n\n  const [name, setName] = useState(\"\");\n  const [mic, setMic] = useState(true);\n  const [cam, setCam] = useState(true);\n  const [joinedRoom, setJoinedRoom] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [peers, setPeers] = useState([]);\n  const [myVideo, setMyVideo] = useState({});\n  const [connected, setConnected] = useState({}); // const myVideo = useRef();\n\n  const peersRef = useRef([]);\n  var currentPeer = [];\n  const roomID = props.match.params.roomID;\n  useEffect(() => {\n    socket.emit(\"join room\", roomID);\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setMyVideo(stream);\n      socket.on(\"all users\", users => {\n        const peers = [];\n        users.forEach(userID => {\n          const peer = createPeer(userID, socket.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer\n          });\n          peers.push(peer);\n        });\n        setPeers(peers);\n      });\n      socket.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        setPeers(users => [...users, peer]);\n      });\n      socket.on(\"receiving returned signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('receive move', data => {\n      setUsers(data.all);\n\n      for (let i = 0; i < data.all.length; i++) {\n        if (data.all[i].id === data.me.id) {\n          continue;\n        }\n\n        let closer = proximity(data.all[i], data.me);\n\n        if (closer && connected[data.all[i].id] === undefined) {\n          connectPeer(data.all[i], data.me);\n        } else if (!closer && connected[data.all[i].id] !== undefined) {\n          disconnectPeer(data.all[i], data.me);\n        }\n      }\n    });\n  }, [socket]);\n\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', signal => {\n      socket.emit('sending signal', {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  };\n\n  const addPeer = (incomingSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', signal => {\n      socket.emit('returning signal', {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  };\n\n  let setup = (p5, canvas) => {\n    let canv = p5.createCanvas(800, 600).parent(canvas);\n    let tempUsers = [];\n    tempUsers.push({\n      id: socket.id,\n      room: roomID,\n      x: 400,\n      y: 100\n    });\n    setUsers(tempUsers);\n  };\n\n  let draw = p5 => {\n    p5.background(\"rgb(255, 255, 255)\");\n    let idx = users.findIndex(user => user.id === socket.id);\n\n    if (idx !== -1) {\n      let tempUsers = users;\n\n      if (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n        tempUsers[idx].y = tempUsers[idx].y - 2;\n      }\n\n      if (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n        tempUsers[idx].x = tempUsers[idx].x - 2;\n      }\n\n      if (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n        tempUsers[idx].y = tempUsers[idx].y + 2;\n      }\n\n      if (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n        tempUsers[idx].x = tempUsers[idx].x + 2;\n      }\n\n      let data = {\n        id: socket.id,\n        room: roomID,\n        x: tempUsers[idx].x,\n        y: tempUsers[idx].y\n      };\n      setUsers(tempUsers);\n      socket.emit('send move', data);\n    }\n\n    for (let i = 0; i < users.length; i++) {\n      p5.circle(users[i].x, users[i].y, 16);\n    }\n  };\n\n  const muteUnmute = e => {\n    const enabled = myVideo.current.srcObject.getAudioTracks()[0].enabled;\n\n    if (enabled) {\n      myVideo.current.srcObject.getAudioTracks()[0].enabled = false;\n    } else {\n      myVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n    }\n  };\n\n  const cameraOnOff = e => {\n    const enabled = myVideo.current.srcObject.getVideoTracks()[0].enabled;\n\n    if (enabled) {\n      myVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n    } else {\n      myVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n    }\n  };\n\n  const screenShare = e => {\n    navigator.mediaDevices.getDisplayMedia({\n      video: {\n        cursor: \"always\"\n      },\n      audio: {\n        echoCancellation: true,\n        echoSupression: true\n      }\n    }).then(stream => {\n      let videoTrack = stream.getVideoTracks()[0];\n\n      videoTrack.onended = () => {\n        stopScreenShare();\n      };\n\n      for (let i = 0; i < currentPeer.length; i++) {\n        let sender = currentPeer[i].getSenders().find(s => {\n          return s.track.kind === videoTrack.kind;\n        });\n        sender.replaceTrack(videoTrack);\n      }\n    });\n    setPeers(peers);\n  };\n\n  const stopScreenShare = () => {\n    let videoTrack = myVideo.current.srcObject.getVideoTracks()[0];\n\n    for (let x = 0; x < currentPeer.length; x++) {\n      let sender = currentPeer[x].getSenders().find(function (s) {\n        return s.track.kind === videoTrack.kind;\n      });\n      sender.replaceTrack(videoTrack);\n    }\n\n    setPeers(peers);\n  };\n\n  const proximity = (user, me) => {\n    if ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const connectPeer = (user, me) => {\n    let temp = connected;\n    temp[user.id] = true;\n    setConnected(temp);\n    return;\n  };\n\n  const disconnectPeer = user => {\n    let temp = connected;\n    delete temp[user.id];\n    setConnected(temp);\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: joinedRoom ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-canvas\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videobox\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"mute\",\n              onClick: e => muteUnmute(e),\n              children: \" Mute \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"camera\",\n              onClick: e => cameraOnOff(e),\n              children: \" Camera \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"screenshare\",\n              onClick: e => screenShare(e),\n              children: \" ScreenShare \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Video, {\n            peer: myVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"videos\",\n            children: peers.map((peer, idx) => {\n              return /*#__PURE__*/_jsxDEV(Video, {\n                peer: peer.peer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 11\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n          setup: setup,\n          draw: draw,\n          className: \"canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        className: \"chat\",\n        socket: socket,\n        room: roomID,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(RoomSetup, {\n      setJoinedRoom: () => setJoinedRoom(true),\n      setMic: preference => setMic(preference),\n      setCam: preference => setCam(preference),\n      setName: name => setName(name)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(Room, \"SvI8KXFYMLLfyR4ye8nJ+jy00Vo=\");\n\n_c3 = Room;\n;\nexport default Room;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledVideo\");\n$RefreshReg$(_c2, \"Video\");\n$RefreshReg$(_c3, \"Room\");","map":{"version":3,"sources":["/Users/shubhamkapoor/gather-video-chat/client/src/Room.js"],"names":["React","useEffect","useRef","useState","io","Peer","Sketch","styled","Chat","RoomSetup","socket","connect","StyledVideo","video","Video","props","ref","current","srcObject","peer","Room","name","setName","mic","setMic","cam","setCam","joinedRoom","setJoinedRoom","users","setUsers","peers","setPeers","myVideo","setMyVideo","connected","setConnected","peersRef","currentPeer","roomID","match","params","emit","navigator","mediaDevices","getUserMedia","audio","then","stream","on","forEach","userID","createPeer","id","push","peerID","payload","addPeer","signal","callerID","item","find","p","data","all","i","length","me","closer","proximity","undefined","connectPeer","disconnectPeer","userToSignal","initiator","trickle","incomingSignal","setup","p5","canvas","canv","createCanvas","parent","tempUsers","room","x","y","draw","background","idx","findIndex","user","keyIsDown","circle","muteUnmute","e","enabled","getAudioTracks","cameraOnOff","getVideoTracks","screenShare","getDisplayMedia","cursor","echoCancellation","echoSupression","videoTrack","onended","stopScreenShare","sender","getSenders","s","track","kind","replaceTrack","temp","map","preference"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from \"./Chat\";\nimport RoomSetup from './RoomSetup';\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nconst StyledVideo = styled.video`\n\theight: 300px;\n\twidth: 300px;\n`;\n\nconst Video = (props) => {\n\tconst ref = useRef();\n\n\tuseEffect(() => {\n\t\tref.current.srcObject = props.peer;\n\t}, []);\n\n\treturn (\n\t\t\t<StyledVideo playsInline autoPlay ref={ ref } />\n\t);\n}\n\nfunction Room(props) {\n\t\tconst [name, setName] = useState(\"\");\n\t\tconst [mic, setMic] = useState(true);\n\t\tconst [cam, setCam] = useState(true);\n\t\tconst [joinedRoom, setJoinedRoom] = useState(false);\n\t\t\n\t\tconst [users, setUsers] = useState([]);\n\t\tconst [peers, setPeers] = useState([]);\n\t\tconst [myVideo, setMyVideo] = useState({});\n\t\tconst [connected, setConnected] = useState({});\n\t\t// const myVideo = useRef();\n\t\tconst peersRef = useRef([]);\n\t\tvar currentPeer = [];\n    const roomID = props.match.params.roomID;\n\n\t\tuseEffect(() => {\n\t\t\tsocket.emit(\"join room\", roomID);\n\t\t\tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n\t\t\t\tsetMyVideo(stream);\n\t\t\t\tsocket.on(\"all users\", users => {\n\t\t\t\t\t\tconst peers = [];\n\t\t\t\t\t\tusers.forEach(userID => {\n\t\t\t\t\t\t\t\tconst peer = createPeer(userID, socket.id, stream);\n\t\t\t\t\t\t\t\tpeersRef.current.push({\n\t\t\t\t\t\t\t\t\t\tpeerID: userID,\n\t\t\t\t\t\t\t\t\t\tpeer,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tpeers.push(peer);\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetPeers(peers);\n\t\t\t\t})\n\n\t\t\t\tsocket.on(\"user joined\", payload => {\n\t\t\t\t\t\tconst peer = addPeer(payload.signal, payload.callerID, stream);\n\t\t\t\t\t\tpeersRef.current.push({\n\t\t\t\t\t\t\t\tpeerID: payload.callerID,\n\t\t\t\t\t\t\t\tpeer,\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tsetPeers(users => [...users, peer]);\n\t\t\t\t});\n\n\t\t\t\tsocket.on(\"receiving returned signal\", payload => {\n\t\t\t\t\t\tconst item = peersRef.current.find(p => p.peerID === payload.id);\n\t\t\t\t\t\titem.peer.signal(payload.signal);\n\t\t\t\t});\n\t\t})\n\t\t}, []);\n\n\tuseEffect(() => {\n\t\tsocket.on('receive move', (data) => {\n\t\t\tsetUsers(data.all);\n\t\t\tfor (let i = 0; i < data.all.length; i ++) {\n\t\t\t\tif (data.all[i].id === data.me.id) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet closer = proximity(data.all[i], data.me)\n\n\t\t\t\tif (closer && connected[data.all[i].id] === undefined) {\n\t\t\t\t\tconnectPeer(data.all[i], data.me);\n\n\t\t\t\t} else if (!closer && connected[data.all[i].id] !== undefined) {\n\t\t\t\t\tdisconnectPeer(data.all[i], data.me);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}, [socket]);\n\n\tconst createPeer = (userToSignal, callerID, stream) => {\n\t\tconst peer = new Peer({\n\t\t\tinitiator: true,\n\t\t\ttrickle: false,\n\t\t\tstream\n\t\t})\n\n\t\tpeer.on('signal', signal => {\n\t\t\tsocket.emit('sending signal', { userToSignal, callerID, signal })\n\t\t})\n\n\t\treturn peer;\n\t}\n\n\tconst addPeer = (incomingSignal, callerID, stream) => {\n\t\tconst peer = new Peer({\n\t\t\tinitiator: false, \n\t\t\ttrickle: false,\n\t\t\tstream\n\t\t})\n\n\t\tpeer.on('signal', signal => {\n\t\t\tsocket.emit('returning signal', { signal, callerID })\n\t\t})\n\n\t\tpeer.signal(incomingSignal);\n\t\treturn peer;\n\t}\n\n\tlet setup = (p5, canvas) => {\n\t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n\t\tlet tempUsers = [];\n\t\ttempUsers.push({\n\t\t\tid: socket.id,\n\t\t\troom: roomID,\n\t\t\tx: 400,\n\t\t\ty: 100\n\t\t});\n\t\t\n\t\tsetUsers(tempUsers);\n\t}\n\n\tlet draw = (p5) => {\n\t\tp5.background(\"rgb(255, 255, 255)\");\n\n\t\tlet idx = users.findIndex((user) => user.id === socket.id)\n\t\tif (idx !== -1) {\n\t\t\tlet tempUsers = users;\n\n\t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n\t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n\t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n\t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n\t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n\t\t\t}\t\n\t\t\t\n\t\t\tlet data = {\n\t\t\t\tid: socket.id,\n\t\t\t\troom: roomID,\n\t\t\t\tx: tempUsers[idx].x,\n\t\t\t\ty: tempUsers[idx].y\t\n\t\t\t}\n\n\t\t\tsetUsers(tempUsers);\n\t\t\tsocket.emit('send move', data);\n\t\t}\n\n\t\tfor (let i = 0; i < users.length; i ++) {\n\t\t\tp5.circle(users[i].x, users[i].y, 16);\n\t\t}\n\t}\n\n\tconst muteUnmute = (e) => {\n\t\tconst enabled = myVideo.current.srcObject.getAudioTracks()[0].enabled;\n\t\tif (enabled) {\n\t\t\tmyVideo.current.srcObject.getAudioTracks()[0].enabled = false;\t\n\t\t} else {\n\t\t\tmyVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n\t\t}\n\t}\n\n\tconst cameraOnOff = (e) => {\n\t\tconst enabled = myVideo.current.srcObject.getVideoTracks()[0].enabled;\n\t\tif (enabled) {\n\t\t\tmyVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n\t\t} else {\n\t\t\tmyVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n\t\t}\n\t}\n\t\n\tconst screenShare = (e) => {\n\t\tnavigator.mediaDevices.getDisplayMedia({\n\t\t\tvideo: { cursor: \"always\" },\n\t\t\taudio: {\n\t\t\t\techoCancellation: true,\n\t\t\t\techoSupression: true,\n\t\t\t}\n\t\t}).then(stream => {\n\t\t\tlet videoTrack = stream.getVideoTracks()[0];\n\t\t\tvideoTrack.onended = () => { stopScreenShare() }\n\t\t\tfor (let i = 0; i < currentPeer.length; i ++) {\n\t\t\t\tlet sender = currentPeer[i].getSenders().find(s => {\n\t\t\t\t\treturn s.track.kind === videoTrack.kind;\n\t\t\t\t})\n\t\t\t\tsender.replaceTrack(videoTrack);\n\t\t\t}\n\t\t})\n\t\tsetPeers(peers);\n\t}\n\n\tconst stopScreenShare = () => {\n\t\tlet videoTrack = myVideo.current.srcObject.getVideoTracks()[0];\n\t\tfor (let x = 0; x < currentPeer.length; x++) {\n\t\t\tlet sender = currentPeer[x].getSenders().find(function (s) {\n\t\t\t\treturn s.track.kind === videoTrack.kind;\n\t\t\t});\n\t\t\tsender.replaceTrack(videoTrack);\n\t\t}\n\t\tsetPeers(peers);\n\t}\n\n\tconst proximity = (user, me) => {\n\t\tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tconst connectPeer = (user, me) => {\n\t\t\n\t\t\n\t\tlet temp = connected;\n\t\ttemp[user.id] = true;\n\t\tsetConnected(temp);\n\t\treturn;\n\t}\n\n\tconst disconnectPeer = (user) => {\n\t\t\n\n\t\tlet temp = connected;\n\t\tdelete temp[user.id]\n\t\tsetConnected(temp);\n\t\treturn;\n\t}\n\n  return (\n\t\t<div>\n\t\t\t{ joinedRoom ? (\n\t\t\t\t<div className=\"room\">\n\t\t\t\t\t<div className=\"video-canvas\">\n\t\t\t\t\t\t<div className=\"videobox\">\n\t\t\t\t\t\t\t<div className=\"buttonbox\">\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Video peer={ myVideo } />\n\t\t\t\t\t\t\t<div className=\"videos\">\n\t\t\t\t\t\t\t\t{ peers.map((peer, idx) => {\n\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t<Video peer={ peer.peer } />\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } name={ name } />\n\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<RoomSetup \n\t\t\t\t\t\tsetJoinedRoom={ () => setJoinedRoom(true) } \n\t\t\t\t\t\tsetMic={ preference => setMic(preference) } \n\t\t\t\t\t\tsetCam={ preference => setCam(preference) } \n\t\t\t\t\t\tsetName={ name => setName(name) }\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n  );\n};\n\nexport default Room;"]},"metadata":{},"sourceType":"module"}