[{"/Users/shubhamkapoor/gather-video-chat/server/client/src/index.js":"1","/Users/shubhamkapoor/gather-video-chat/server/client/src/App.js":"2","/Users/shubhamkapoor/gather-video-chat/server/client/src/JoinRoom.js":"3","/Users/shubhamkapoor/gather-video-chat/server/client/src/Room.js":"4","/Users/shubhamkapoor/gather-video-chat/server/client/src/RoomSetup.js":"5","/Users/shubhamkapoor/gather-video-chat/server/client/src/Chat.js":"6","/Users/shubhamkapoor/gather-video-chat/server/client/src/Model.js":"7"},{"size":266,"mtime":1636283341324,"results":"8","hashOfConfig":"9"},{"size":390,"mtime":1636135218415,"results":"10","hashOfConfig":"9"},{"size":1788,"mtime":1636283341319,"results":"11","hashOfConfig":"9"},{"size":10505,"mtime":1636447761401,"results":"12","hashOfConfig":"9"},{"size":3163,"mtime":1636283341321,"results":"13","hashOfConfig":"9"},{"size":2540,"mtime":1636291251282,"results":"14","hashOfConfig":"9"},{"size":1200,"mtime":1636444077239,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1vnuz9b",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Users/shubhamkapoor/gather-video-chat/server/client/src/index.js",[],["34","35"],"/Users/shubhamkapoor/gather-video-chat/server/client/src/App.js",[],"/Users/shubhamkapoor/gather-video-chat/server/client/src/JoinRoom.js",["36","37"],"import React, { useState } from \"react\";\nimport \"./JoinRoom.css\";\nimport { v1 as uuid } from \"uuid\";\nimport io from \"socket.io-client\";\nimport e from \"cors\";\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction JoinRoom(props) {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  const joinRoom = (e) => {\n    e.preventDefault();\n    if (name === \"\" || room === \"\") {\n      alert(\"Please enter valid values\");\n      return;\n    }\n\n    document.getElementById(\"input-name\").value = \"\";\n    document.getElementById(\"input-room\").value = \"\";\n\n    props.history.push(`/room/${room}`);\n  };\n\n  const createRoom = (e) => {\n    e.preventDefault();\n    if (name === \"\") {\n      alert(\"Please enter a name\");\n      return;\n    }\n\n    document.getElementById(\"input-name\").value = \"\";\n    document.getElementById(\"input-room\").value = \"\";\n\n    const roomID = uuid();\n    props.history.push(`/room/${roomID}`);\n  };\n  return (\n    <div className=\"overAll\">\n      <div className=\"joinRoom\">\n        <h1 className=\"entryTitle\"> Enter Room Details </h1>\n        <input\n          id=\"input-name\"\n          type=\"text\"\n          placeholder=\"Enter Your Name...\"\n          onChange={(e) => setName(e.target.value)}\n        />\n        <input\n          id=\"input-room\"\n          type=\"text\"\n          placeholder=\"Enter Room ID...\"\n          onChange={(e) => setRoom(e.target.value)}\n        />\n        <button className=\"joinBtn\" type=\"submit\" onClick={(e) => joinRoom(e)}>\n          {\" \"}\n          Join a room{\" \"}\n        </button>\n        <div className=\"line\"></div>\n        <button className=\"createBtn\" onClick={(e) => createRoom(e)}>\n          {\" \"}\n          Create new room{\" \"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default JoinRoom;\n","/Users/shubhamkapoor/gather-video-chat/server/client/src/Room.js",["38","39","40","41","42","43"],"import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from \"react-p5\";\nimport styled from \"styled-components\";\nimport Chat from \"./Chat\";\nimport RoomSetup from \"./RoomSetup\";\nimport Model from './Model';\nimport \"font-awesome/css/font-awesome.min.css\";\n<script\n  src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta2/js/all.min.js\"\n  integrity=\"sha512-cyAbuGborsD25bhT/uz++wPqrh5cqPh1ULJz4NSpN9ktWcA6Hnh9g+CWKeNx2R0fgQt+ybRXdabSBgYXkQTTmA==\"\n  crossorigin=\"anonymous\"\n  referrerpolicy=\"no-referrer\"\n></script>;\nconst socket = io.connect(\"http://localhost:3001\");\n\nconst StyledVideo = styled.video`\n  height: 100%;\n  width: 100%;\n`;\n\nconst Video = (props) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current.srcObject = props.peer._remoteStreams[0];\n  }, []);\n\n  return <StyledVideo playsInline autoPlay ref={ref} />;\n};\n\nfunction Room(props) {\n  const [aiEnabled, setAiEnabled] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [mic, setMic] = useState(true);\n  const [cam, setCam] = useState(true);\n  const [faces, setFaces] = useState(1);\n  const [joinedRoom, setJoinedRoom] = useState(false);\n\n  const [nearby, setNearby] = useState([]);\n  const [users, setUsers] = useState([]);\n  const userVideo = useRef();\n  const modelVideo = useRef();\n  const peersRef = useRef([]);\n  const trackPeers = useRef([]);\n  const roomID = props.match.params.roomID;\n\n  useEffect(() => {\n    if (!joinedRoom) {\n      return;\n    }\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        userVideo.current.srcObject = stream;\n        modelVideo.current = {};\n        modelVideo.current.srcObject = stream;\n        if (!cam) {\n          cameraOnOff();\n        }\n        if (!mic) {\n          muteUnmute();\n        }\n        socket.emit(\"join room\", { roomID: roomID, name: name });\n        socket.on(\"all users\", (users) => {\n          users.forEach((userID) => {\n            const peer = createPeer(userID, socket.id, stream);\n            peersRef.current.push({\n              peerID: userID,\n              peer,\n            });\n          });\n        });\n\n        socket.on(\"user joined\", (payload) => {\n          const peer = addPeer(payload.signal, payload.callerID, stream);\n          peersRef.current.push({\n            peerID: payload.callerID,\n            peer,\n          });\n        });\n\n        socket.on(\"receiving returned signal\", (payload) => {\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\n          item.peer.signal(payload.signal);\n        });\n\n        socket.on(\"user left\", (id) => {\n          const peerObj = peersRef.current.find((p) => p.peerID === id);\n          if (peerObj) {\n            peerObj.peer.destroy();\n          }\n          const peers = peersRef.current.filter((p) => p.peerID !== id);\n          const tempNearby = nearby.filter((p) => p.peerID !== id);\n          peersRef.current = peers;\n          setNearby(tempNearby);\n        });\n      });\n  }, [joinedRoom]);\n\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socket.emit(\"sending signal\", { userToSignal, callerID, signal });\n    });\n\n    return peer;\n  };\n\n  const addPeer = (incomingSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socket.emit(\"returning signal\", { signal, callerID });\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  };\n\n  useEffect(() => {\n    socket.on(\"receive move\", (data) => {\n      setUsers(data.all);\n\n      var me = {};\n      for (let i = 0; i < data.all.length; i++) {\n        if (data.all[i].id === socket.id) {\n          me = data.all[i];\n          break;\n        }\n      }\n\n      var tempNearby = [];\n      for (let i = 0; i < data.all.length; i++) {\n        if (data.all[i].id === socket.id) {\n          continue;\n        }\n        if (proximity(data.all[i], me)) {\n          for (var j = 0; j < peersRef.current.length; j++) {\n            if (peersRef.current[j].peerID === data.all[i].id) {\n              tempNearby.push({\n                peerObj: peersRef.current[j],\n                name: data.all[i].name,\n              });\n            }\n          }\n        }\n      }\n\n      setNearby(tempNearby);\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    if (!joinedRoom) {\n      return;\n    }\n    \n    if (faces !== 1) {\n      userVideo.current.srcObject.getVideoTracks()[0].enabled = false; \n      userVideo.current.srcObject.getAudioTracks()[0].enabled = false; \n    } else {\n      if (cam) {\n        userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n      }\n      if (mic) {\n        userVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n      }\n    }\n  }, [faces])\n\n  const muteUnmute = (e) => {\n    const enabled = userVideo.current.srcObject.getAudioTracks()[0].enabled;\n    if (enabled) {\n      userVideo.current.srcObject.getAudioTracks()[0].enabled = false;\n      setMic(false);\n    } else {\n      userVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n      setMic(true);\n    }\n    const muteBtn = document.querySelector(\".mute-1\");\n    muteBtn.classList.toggle(\"whitened\");\n  };\n\n  const cameraOnOff = (e) => {\n    const enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n    if (enabled) {\n      userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n      setCam(false);\n    } else {\n      userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n      setCam(true);\n    }\n    const cameraBtn = document.querySelector(\".camera-1\");\n    cameraBtn.classList.toggle(\"cameraOff\");\n  };\n\n  const screenShare = (e) => {\n    navigator.mediaDevices\n      .getDisplayMedia({ \n        cursor: true,\n      }).then(screen => {\n        const screenTrack = screen.getTracks()[0];\n        console.log(screenTrack);\n        console.log(userVideo.current.srcObject);\n        \n        screen.onended = () => {\n          userVideo.current.srcObject = modelVideo.current.srcObject;\n        }\n      })\n  };\n\n  const proximity = (user, me) => {\n    if (\n      (user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <=\n      10000\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  let setup = (p5, canvas) => {\n    let canv = p5.createCanvas(924, 500).parent(canvas);\n    let tempUsers = [];\n    tempUsers.push({\n      id: socket.id,\n      room: roomID,\n      x: 462,\n      y: 100,\n    });\n\n    setUsers(tempUsers);\n  };\n\n  let draw = (p5) => {\n    p5.background(\"rgb(255, 255, 255)\");\n\n    let idx = users.findIndex((user) => user.id === socket.id);\n    if (idx !== -1) {\n      let tempUsers = users;\n\n      if (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n        tempUsers[idx].y = tempUsers[idx].y - 2;\n      }\n      if (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n        tempUsers[idx].x = tempUsers[idx].x - 2;\n      }\n      if (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n        tempUsers[idx].y = tempUsers[idx].y + 2;\n      }\n      if (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n        tempUsers[idx].x = tempUsers[idx].x + 2;\n      }\n\n      setUsers(tempUsers);\n      let data = {\n        id: socket.id,\n        room: roomID,\n        x: tempUsers[idx].x,\n        y: tempUsers[idx].y,\n      };\n      socket.emit(\"send move\", data);\n    }\n    for (let i = 0; i < users.length; i++) {\n      p5.circle(users[i].x, users[i].y, 16);\n    }\n  };\n\n  const handleAiToggle = () => {\n    if (aiEnabled) {\n      setAiEnabled(false);\n    } else {\n      setAiEnabled(true);\n    }\n  }\n\n  return (\n    <div>\n      {joinedRoom ? (\n        <div className=\"room\">\n          <div className=\"video-canvas\">\n            <div className=\"buttonbox\">\n              <button\n                type=\"button\"\n                className=\"mute-1\"\n                onClick={(e) => muteUnmute(e)}\n              >\n                {\" \"}\n                <i className=\"fa fa-microphone-slash\"></i>{\" \"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"camera-1\"\n                onClick={(e) => cameraOnOff(e)}\n              >\n                {\" \"}\n                <i className=\"fa fa-camera\"></i>{\" \"}\n              </button>\n              <button\n                type=\"button\"\n                className=\"screenshare-1\"\n                onClick={(e) => screenShare(e)}\n              >\n                {\" \"}\n                <i className=\"fa fa-desktop\"></i>{\" \"}\n              </button>\n            </div>\n            <div className=\"videobox\">\n              <div className=\"video-container\">\n                <p className=\"person-name\">{name}</p>\n                <div className=\"video-style\">\n                  <StyledVideo\n                    className=\"video-room\"\n                    muted\n                    ref={userVideo}\n                    autoPlay\n                    playsInline\n                  />\n                </div>\n              </div>\n              {nearby.map((peer) => {\n                return (\n                  <div className=\"video-container-peer\">\n                    <p className=\"person-name-peer\">{peer.name}</p>\n                    <div className=\"video-style-peer\">\n                      <Video peer={peer.peerObj.peer} />\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <Sketch setup={setup} draw={draw} className=\"canvas\" />\n          </div>\n          <div>\n            <button \n              className=\"enable-ai\"\n              onClick={(e) => handleAiToggle()}\n              >\n              Enable Gesture Recognition\n            </button>\n            { aiEnabled ? ( \n              <Model \n                streamRef={modelVideo} \n                setFaces={(faces) => setFaces(faces)}\n              />\n            ) : (\n              <div></div>\n            )}\n            <Chat className=\"chat\" socket={socket} room={roomID} name={name} />\n          </div>\n        </div>\n      ) : (\n        <RoomSetup\n          setJoinedRoom={() => setJoinedRoom(true)}\n          setMic={(preference) => setMic(preference)}\n          setCam={(preference) => setCam(preference)}\n          setName={(name) => setName(name)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Room;","/Users/shubhamkapoor/gather-video-chat/server/client/src/RoomSetup.js",[],"/Users/shubhamkapoor/gather-video-chat/server/client/src/Chat.js",[],"/Users/shubhamkapoor/gather-video-chat/server/client/src/Model.js",["44","45","46"],"import React, { useState, useRef } from 'react'\nimport * as tf from '@tensorflow/tfjs'\nimport * as fp from 'fingerpose'\nimport * as blazeface from '@tensorflow-models/blazeface'\nimport Webcam from 'react-webcam'\nimport './Model.css'\n\nfunction Model(props) {\n\tconst webcamRef = useRef(null);\n\n\tconst runHandpose = async () => {\n\t\tconst net = await blazeface.load();\n\n\t\tsetInterval(() => {\n\t\t\tdetect(net);\n\t\t}, 1000)\n\t}\n\n  const detect = async (net) => {\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      const faces = await net.estimateFaces(video);\n\t\t\tconsole.log(faces.length);\n\t\t\tprops.setFaces(faces.length);\n    }\n  };\n\n  runHandpose();\n\n\treturn (\n\t\t<div className=\"model\">\n\t\t\t<Webcam\n  \t    ref={webcamRef}\n  \t    style={{\n\t\t\t\t\twidth: \"0px\",\n\t\t\t\t\theight: \"0px\",\n  \t    }}\n     \t/>\n\t\t</div>\n\t)\n}\n\nexport default Model",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":5,"column":8,"nodeType":"53","messageId":"54","endLine":5,"endColumn":9},{"ruleId":"51","severity":1,"message":"55","line":7,"column":7,"nodeType":"53","messageId":"54","endLine":7,"endColumn":13},{"ruleId":"56","severity":1,"message":"57","line":29,"column":6,"nodeType":"58","endLine":29,"endColumn":8,"suggestions":"59"},{"ruleId":"51","severity":1,"message":"60","line":47,"column":9,"nodeType":"53","messageId":"54","endLine":47,"endColumn":19},{"ruleId":"56","severity":1,"message":"61","line":101,"column":6,"nodeType":"58","endLine":101,"endColumn":18,"suggestions":"62"},{"ruleId":"56","severity":1,"message":"63","line":164,"column":6,"nodeType":"58","endLine":164,"endColumn":14,"suggestions":"64"},{"ruleId":"56","severity":1,"message":"65","line":182,"column":6,"nodeType":"58","endLine":182,"endColumn":13,"suggestions":"66"},{"ruleId":"51","severity":1,"message":"67","line":237,"column":9,"nodeType":"53","messageId":"54","endLine":237,"endColumn":13},{"ruleId":"51","severity":1,"message":"68","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"69","line":2,"column":13,"nodeType":"53","messageId":"54","endLine":2,"endColumn":15},{"ruleId":"51","severity":1,"message":"70","line":3,"column":13,"nodeType":"53","messageId":"54","endLine":3,"endColumn":15},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'e' is defined but never used.","Identifier","unusedVar","'socket' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.peer._remoteStreams'. Either include it or remove the dependency array.","ArrayExpression",["73"],"'trackPeers' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cam', 'mic', 'name', 'nearby', and 'roomID'. Either include them or remove the dependency array.",["74"],"React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["75"],"React Hook useEffect has missing dependencies: 'cam', 'joinedRoom', and 'mic'. Either include them or remove the dependency array.",["76"],"'canv' is assigned a value but never used.","'useState' is defined but never used.","'tf' is defined but never used.","'fp' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [props.peer._remoteStreams]",{"range":"85","text":"86"},"Update the dependencies array to be: [cam, joinedRoom, mic, name, nearby, roomID]",{"range":"87","text":"88"},"Update the dependencies array to be: []",{"range":"89","text":"90"},"Update the dependencies array to be: [cam, faces, joinedRoom, mic]",{"range":"91","text":"92"},[890,892],"[props.peer._remoteStreams]",[3108,3120],"[cam, joinedRoom, mic, name, nearby, roomID]",[4547,4555],"[]",[5012,5019],"[cam, faces, joinedRoom, mic]"]