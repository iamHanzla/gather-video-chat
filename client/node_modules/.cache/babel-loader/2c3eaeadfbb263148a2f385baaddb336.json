{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkapoor/gather-video-chat/client/src/Room.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nconst StyledVideo = styled.video`\n\theight: 300px;\n\twidth: 300px;\n`;\n_c = StyledVideo;\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledVideo, {\n    playsInLine: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c2 = Video;\n\nfunction Room(props) {\n  _s2();\n\n  const [users, setUsers] = useState([]);\n  const [connected, setConnected] = useState([]);\n  const [peers, setPeers] = useState([]);\n  const peersRef = useRef([]);\n  const myVideo = useRef();\n  const roomID = props.match.params.roomID;\n  const [me, setMe] = useState({\n    id: socket.id,\n    room: roomID,\n    x: 400,\n    y: 100\n  });\n  useEffect(() => {\n    socket.emit(\"join room\", roomID);\n\n    const getUserMedia = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        myVideo.current.srcObject = stream;\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getUserMedia();\n    socket.on('accept call', data => {\n      const peer = new Peer({\n        initiator: false,\n        trickle: false,\n        stream: myVideo.current.srcObject\n      });\n      peer.on(\"signal\", data => {\n        socket.emit(\"accept call\", {\n          signal: data.signal,\n          caller: data.from\n        });\n      });\n      peer.on(\"stream\", stream => {\n        peersRef.push(stream);\n        setPeers(p => [...p, stream]);\n      });\n      peer.signal(data.signal);\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('receive move', data => {\n      setUsers(data);\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].id === me.id) {\n          continue;\n        }\n\n        if (proximity(data[i])) {\n          connectPeer(data[i]);\n        } else {\n          disconnectPeer(data[i]);\n        }\n      }\n    });\n  }, [socket]);\n\n  let setup = (p5, canvas) => {\n    let canv = p5.createCanvas(800, 600).parent(canvas);\n    let tempUsers = [];\n    setMe({\n      id: socket.id,\n      room: roomID,\n      x: 400,\n      y: 100\n    });\n    tempUsers.push({\n      id: socket.id,\n      room: roomID,\n      x: 400,\n      y: 100\n    });\n    setUsers(tempUsers);\n  };\n\n  let draw = p5 => {\n    p5.background(\"rgb(255, 255, 255)\");\n    let idx = users.findIndex(user => user.id === socket.id);\n\n    if (idx !== -1) {\n      let tempUsers = users;\n\n      if (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n        tempUsers[idx].y = tempUsers[idx].y - 2;\n      }\n\n      if (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n        tempUsers[idx].x = tempUsers[idx].x - 2;\n      }\n\n      if (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n        tempUsers[idx].y = tempUsers[idx].y + 2;\n      }\n\n      if (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n        tempUsers[idx].x = tempUsers[idx].x + 2;\n      }\n\n      let data = {\n        id: socket.id,\n        room: roomID,\n        x: tempUsers[idx].x,\n        y: tempUsers[idx].y\n      };\n      setMe(data);\n      setUsers(tempUsers);\n      socket.emit('send move', data);\n    }\n\n    for (let i = 0; i < users.length; i++) {\n      p5.circle(users[i].x, users[i].y, 16);\n    }\n  };\n\n  const muteUnmute = e => {};\n\n  const cameraOnOff = e => {};\n\n  const screenShare = e => {};\n\n  const proximity = user => {\n    if ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const connectPeer = user => {\n    if (connected.findIndex(u => u.id === user.id) !== -1) {\n      return;\n    }\n\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: myVideo.current.srcObject\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"call user\", {\n        userToCall: user.id,\n        signalData: data,\n        from: me.id\n      });\n    });\n    peer.on(\"stream\", stream => {\n      if (peersRef.current) {\n        peersRef.current.push(stream);\n      }\n    });\n    socket.on(\"call accepted\", signal => {\n      peer.signal(signal);\n    });\n    setConnected([...connected, user.id]);\n  };\n\n  const disconnectPeer = user => {\n    if (connected.findIndex(u => u.id === user.id) === -1) {\n      return;\n    }\n\n    let temp = connected;\n    let idx = temp.findIndex(user.id);\n    temp.splice(idx, 1);\n    setConnected(temp);\n    console.log(connected);\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-canvas\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videobox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"mute\",\n            onClick: e => muteUnmute(e),\n            children: \" Mute \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"camera\",\n            onClick: e => cameraOnOff(e),\n            children: \" Camera \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"screenshare\",\n            onClick: e => screenShare(e),\n            children: \" ScreenShare \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StyledVideo, {\n          muted: true,\n          ref: myVideo,\n          autoPlay: true,\n          playsInLine: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videos\",\n          children: connected.map(peer => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: setup,\n        draw: draw,\n        className: \"canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      className: \"chat\",\n      socket: socket,\n      room: roomID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(Room, \"kKpwg/ciFwGhJ38L52Zn2+w0h1c=\");\n\n_c3 = Room;\n;\nexport default Room; // import React, { useEffect, useRef, useState } from \"react\";\n// import io from \"socket.io-client\";\n// import Peer from \"simple-peer\";\n// import \"./Room.css\";\n// import Sketch from 'react-p5';\n// import styled from \"styled-components\";\n// import Chat from './Chat';\n// const socket = io.connect(\"http://localhost:3001\");\n// const StyledVideo = styled.video`\n// \theight: 300px;\n// \twidth: 300px;\n// `;\n// const Video = (props) => {\n// \tconst ref = useRef();\n// \tuseEffect(() => {\n// \t\tprops.peer.on(\"stream\", stream => {\n// \t\t\t\tref.current.srcObject = stream;\n// \t\t})\n// \t}, []);\n// \treturn (\n// \t\t<StyledVideo playsInLine autoPlay ref={ ref } />\n// \t);\n// }\n// function Room(props) {\n// \t\tconst [users, setUsers] = useState([]);\n// \t\tconst [me, setMe] = useState({});\n// \t\tconst myVideo = useRef();\n//     const roomID = props.match.params.roomID;\n// useEffect(() => {\n// \tsocket.emit(\"join room\", roomID);\n// \tconst getUserMedia = async () => {\n// \t\ttry {\n// \t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n// \t\t\tmyVideo.current.srcObject = stream;\n// \t\t} catch (err) {\n// \t\t\tconsole.log(err)\n// \t\t}\n// \t}\n// \tgetUserMedia();\n// }, []);\n// \tuseEffect(() => {\n// \t\tsocket.on('receive move', (data) => {\n// \t\t\tsetUsers(data);\n// \t\t})\n// \t}, [socket]);\n// \tlet setup = (p5, canvas) => {\n// \t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n// \t\tlet tempUsers = [];\n// \t\tsetMe({ id: socket.id, room: roomID, x: 400, y: 100 });\n// \t\ttempUsers.push({\n// \t\t\tid: socket.id,\n// \t\t\troom: roomID,\n// \t\t\tx: 400,\n// \t\t\ty: 100\n// \t\t});\n// \t\tsetUsers(tempUsers);\n// \t}\n// \tlet draw = (p5) => {\n// \t\tp5.background(\"rgb(255, 255, 255)\");\n// \t\tlet idx = users.findIndex((user) => user.id === socket.id)\n// \t\tif (idx !== -1) {\n// \t\t\tlet tempUsers = users;\n// \t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n// \t\t\t}\t\n// \t\t\tsetUsers(tempUsers);\n// \t\t\tlet data = {\n// \t\t\t\tid: socket.id,\n// \t\t\t\troom: roomID,\n// \t\t\t\tx: tempUsers[idx].x,\n// \t\t\t\ty: tempUsers[idx].y\t\n// \t\t\t}\n// \t\t\tsetMe(data);\n// \t\t\tsocket.emit('send move', data);\n// \t\t}\n// \t\tfor (let i = 0; i < users.length; i ++) {\n// \t\t\tp5.circle(users[i].x, users[i].y, 16);\n// \t\t}\n// \t}\n// \tconst muteUnmute = (e) => {\n// \t}\n// \tconst cameraOnOff = (e) => {\n// \t}\n// \tconst screenShare = (e) => {\n// \t}\n// \tconst proximity = (user) => {\n// \t\tif (user.id === me.id) {\n// \t\t\treturn false;\n// \t\t}\n// \t\tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n// \t\t\treturn true;\n// \t\t} else {\n// \t\t\treturn false;\n// \t\t}\n// \t}\t\n//   return (\n// \t\t<div className=\"room\">\n// \t\t\t<div className=\"video-canvas\">\n// \t\t\t\t<div className=\"videobox\">\n// \t\t\t\t\t<div className=\"buttonbox\">\n// \t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n// \t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n// \t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<StyledVideo muted ref={ myVideo } autoPlay playsInLine />\n// \t\t\t\t\t<div className=\"videos\">\n// \t\t\t\t\t\t{ users.map(user => {\n// \t\t\t\t\t\t\treturn(\n// \t\t\t\t\t\t\t\tproximity(user) ? (\n// \t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t{ console.log(\"yes\") }\n// \t\t\t\t\t\t\t\t\t\t{ socket.emit(\"connect peer\", { first: user, second: me })}\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\tuser.id === me.id ? (\n// \t\t\t\t\t\t\t\t\t\t<div></div>\n// \t\t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t\t{ console.log(\"no\") }\n// \t\t\t\t\t\t\t\t\t\t\t{ socket.emit(\"disconnect peer\", { first: user, second: me })}\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t)\n// \t\t\t\t\t\t})}\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n// \t\t\t</div>\n// \t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } />\n// \t\t</div>\n//   );\n// };\n// export default Room;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledVideo\");\n$RefreshReg$(_c2, \"Video\");\n$RefreshReg$(_c3, \"Room\");","map":{"version":3,"sources":["/Users/shubhamkapoor/gather-video-chat/client/src/Room.js"],"names":["React","useEffect","useRef","useState","io","Peer","Sketch","styled","Chat","socket","connect","StyledVideo","video","Video","props","ref","peer","on","stream","current","srcObject","Room","users","setUsers","connected","setConnected","peers","setPeers","peersRef","myVideo","roomID","match","params","me","setMe","id","room","x","y","emit","getUserMedia","navigator","mediaDevices","audio","err","console","log","data","initiator","trickle","signal","caller","from","push","p","i","length","proximity","connectPeer","disconnectPeer","setup","p5","canvas","canv","createCanvas","parent","tempUsers","draw","background","idx","findIndex","user","keyIsDown","circle","muteUnmute","e","cameraOnOff","screenShare","u","userToCall","signalData","temp","splice","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from './Chat';\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nconst StyledVideo = styled.video`\n\theight: 300px;\n\twidth: 300px;\n`;\n\nconst Video = (props) => {\n\tconst ref = useRef();\n\n\tuseEffect(() => {\n\t\tprops.peer.on(\"stream\", stream => {\n\t\t\t\tref.current.srcObject = stream;\n\t\t})\n\t}, []);\n\n\treturn (\n\t\t<StyledVideo playsInLine autoPlay ref={ ref } />\n\t);\n}\n\nfunction Room(props) {\n\t\tconst [users, setUsers] = useState([]);\n\t\tconst [connected, setConnected] = useState([]);\n\t\tconst [peers, setPeers] = useState([]);\n\t\tconst peersRef = useRef([]);\n\t\tconst myVideo = useRef();\n    const roomID = props.match.params.roomID;\n\t\tconst [me, setMe] = useState({ id: socket.id, room: roomID, x: 400, y: 100 });\n\n\t\tuseEffect(() => {\n\t\t\tsocket.emit(\"join room\", roomID);\n\t\t\tconst getUserMedia = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n\t\t\t\t\tmyVideo.current.srcObject = stream;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t}\n\t\t\t}\n\t\t\tgetUserMedia();\n\n\t\t\tsocket.on('accept call', data => {\n\t\t\t\tconst peer = new Peer({\n\t\t\t\t\tinitiator: false,\n\t\t\t\t\ttrickle: false,\n\t\t\t\t\tstream: myVideo.current.srcObject,\n\t\t\t\t});\n\n\t\t\t\tpeer.on(\"signal\", data => {\n\t\t\t\t\tsocket.emit(\"accept call\", { signal: data.signal, caller: data.from })\n\t\t\t\t})\n\n\t\t\t\tpeer.on(\"stream\", stream => {\n\t\t\t\t\tpeersRef.push(stream);\n\t\t\t\t\tsetPeers(p => [...p, stream]);\n\t\t\t\t})\n\n\t\t\t\tpeer.signal(data.signal);\n\t\t\t})\n\t\t}, []);\n\n\tuseEffect(() => {\n\t\tsocket.on('receive move', (data) => {\n\t\t\tsetUsers(data);\n\t\t\tfor (let i = 0; i < data.length; i ++) {\n\t\t\t\tif (data[i].id === me.id) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (proximity(data[i])) {\n\t\t\t\t\tconnectPeer(data[i]);\n\t\t\t\t} else {\n\t\t\t\t\tdisconnectPeer(data[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}, [socket]);\n\n\tlet setup = (p5, canvas) => {\n\t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n\t\tlet tempUsers = [];\n\t\tsetMe({ id: socket.id, room: roomID, x: 400, y: 100 });\n\t\ttempUsers.push({\n\t\t\tid: socket.id,\n\t\t\troom: roomID,\n\t\t\tx: 400,\n\t\t\ty: 100\n\t\t});\n\t\t\n\t\tsetUsers(tempUsers);\n\t}\n\n\tlet draw = (p5) => {\n\t\tp5.background(\"rgb(255, 255, 255)\");\n\n\t\tlet idx = users.findIndex((user) => user.id === socket.id)\n\t\tif (idx !== -1) {\n\t\t\tlet tempUsers = users;\n\n\t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n\t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n\t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n\t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n\t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n\t\t\t}\t\n\t\t\t\n\t\t\tlet data = {\n\t\t\t\tid: socket.id,\n\t\t\t\troom: roomID,\n\t\t\t\tx: tempUsers[idx].x,\n\t\t\t\ty: tempUsers[idx].y\t\n\t\t\t}\n\n\t\t\tsetMe(data);\n\t\t\tsetUsers(tempUsers);\n\t\t\tsocket.emit('send move', data);\n\t\t}\n\n\t\tfor (let i = 0; i < users.length; i ++) {\n\t\t\tp5.circle(users[i].x, users[i].y, 16);\n\t\t}\n\t}\n\n\tconst muteUnmute = (e) => {\n\n\t}\n\n\tconst cameraOnOff = (e) => {\n\n\t}\n\n\tconst screenShare = (e) => {\n\n\t}\n\n\tconst proximity = (user) => {\n\t\tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\t\n\n\tconst connectPeer = (user) => {\n\n\t\tif (connected.findIndex(u => u.id === user.id) !== -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst peer = new Peer({\n\t\t\tinitiator: true,\n\t\t\ttrickle: false,\n\t\t\tstream: myVideo.current.srcObject,\n\t\t})\n\n\t\tpeer.on(\"signal\", data => {\n\t\t\tsocket.emit(\"call user\", { userToCall: user.id, signalData: data, from: me.id })\n\t\t})\n\n\t\tpeer.on(\"stream\", stream => {\n\t\t\tif (peersRef.current) {\n\t\t\t\tpeersRef.current.push(stream);\n\t\t\t}\n\t\t})\n\n\t\tsocket.on(\"call accepted\", signal => {\n\t\t\tpeer.signal(signal);\n\t\t})\n\t\tsetConnected([...connected, user.id]);\n\t}\n\n\tconst disconnectPeer = (user) => {\n\t\t\n\t\tif (connected.findIndex(u => u.id === user.id) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet temp = connected;\n\t\tlet idx = temp.findIndex(user.id);\n\t\ttemp.splice(idx, 1);\n\t\tsetConnected(temp);\n\t\tconsole.log(connected);\n\t\treturn;\n\t}\n\n  return (\n\t\t<div className=\"room\">\n\t\t\t<div className=\"video-canvas\">\n\t\t\t\t<div className=\"videobox\">\n\t\t\t\t\t<div className=\"buttonbox\">\n\t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n\t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n\t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<StyledVideo muted ref={ myVideo } autoPlay playsInLine />\n\t\t\t\t\t<div className=\"videos\">\n\t\t\t\t\t\t{ connected.map(peer => {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n\t\t\t</div>\n\t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } />\n\t\t</div>\n  );\n};\n\nexport default Room;\n\n\n\n\n\n\n\n// import React, { useEffect, useRef, useState } from \"react\";\n// import io from \"socket.io-client\";\n// import Peer from \"simple-peer\";\n// import \"./Room.css\";\n// import Sketch from 'react-p5';\n// import styled from \"styled-components\";\n// import Chat from './Chat';\n\n// const socket = io.connect(\"http://localhost:3001\");\n\n// const StyledVideo = styled.video`\n// \theight: 300px;\n// \twidth: 300px;\n// `;\n\n// const Video = (props) => {\n// \tconst ref = useRef();\n\n// \tuseEffect(() => {\n// \t\tprops.peer.on(\"stream\", stream => {\n// \t\t\t\tref.current.srcObject = stream;\n// \t\t})\n// \t}, []);\n\n// \treturn (\n// \t\t<StyledVideo playsInLine autoPlay ref={ ref } />\n// \t);\n// }\n\n// function Room(props) {\n// \t\tconst [users, setUsers] = useState([]);\n// \t\tconst [me, setMe] = useState({});\n\t\t\n// \t\tconst myVideo = useRef();\n//     const roomID = props.match.params.roomID;\n\n  // useEffect(() => {\n\t// \tsocket.emit(\"join room\", roomID);\n\t// \tconst getUserMedia = async () => {\n\t// \t\ttry {\n\t// \t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n\t// \t\t\tmyVideo.current.srcObject = stream;\n\t// \t\t} catch (err) {\n\t// \t\t\tconsole.log(err)\n\t// \t\t}\n\t// \t}\n\t// \tgetUserMedia();\n  // }, []);\n\n// \tuseEffect(() => {\n// \t\tsocket.on('receive move', (data) => {\n// \t\t\tsetUsers(data);\n// \t\t})\n// \t}, [socket]);\n\n// \tlet setup = (p5, canvas) => {\n// \t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n// \t\tlet tempUsers = [];\n// \t\tsetMe({ id: socket.id, room: roomID, x: 400, y: 100 });\n// \t\ttempUsers.push({\n// \t\t\tid: socket.id,\n// \t\t\troom: roomID,\n// \t\t\tx: 400,\n// \t\t\ty: 100\n// \t\t});\n\t\t\n// \t\tsetUsers(tempUsers);\n// \t}\n\n// \tlet draw = (p5) => {\n// \t\tp5.background(\"rgb(255, 255, 255)\");\n\n// \t\tlet idx = users.findIndex((user) => user.id === socket.id)\n// \t\tif (idx !== -1) {\n// \t\t\tlet tempUsers = users;\n\n// \t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n// \t\t\t}\t\n\t\t\t\n// \t\t\tsetUsers(tempUsers);\n// \t\t\tlet data = {\n// \t\t\t\tid: socket.id,\n// \t\t\t\troom: roomID,\n// \t\t\t\tx: tempUsers[idx].x,\n// \t\t\t\ty: tempUsers[idx].y\t\n// \t\t\t}\n// \t\t\tsetMe(data);\n// \t\t\tsocket.emit('send move', data);\n// \t\t}\n// \t\tfor (let i = 0; i < users.length; i ++) {\n// \t\t\tp5.circle(users[i].x, users[i].y, 16);\n// \t\t}\n// \t}\n\n// \tconst muteUnmute = (e) => {\n\n// \t}\n\n// \tconst cameraOnOff = (e) => {\n\n// \t}\n\n// \tconst screenShare = (e) => {\n\n// \t}\n\n// \tconst proximity = (user) => {\n// \t\tif (user.id === me.id) {\n// \t\t\treturn false;\n// \t\t}\n// \t\tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n// \t\t\treturn true;\n// \t\t} else {\n// \t\t\treturn false;\n// \t\t}\n// \t}\t\n\n//   return (\n// \t\t<div className=\"room\">\n// \t\t\t<div className=\"video-canvas\">\n// \t\t\t\t<div className=\"videobox\">\n// \t\t\t\t\t<div className=\"buttonbox\">\n// \t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n// \t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n// \t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<StyledVideo muted ref={ myVideo } autoPlay playsInLine />\n// \t\t\t\t\t<div className=\"videos\">\n// \t\t\t\t\t\t{ users.map(user => {\n// \t\t\t\t\t\t\treturn(\n// \t\t\t\t\t\t\t\tproximity(user) ? (\n// \t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t{ console.log(\"yes\") }\n// \t\t\t\t\t\t\t\t\t\t{ socket.emit(\"connect peer\", { first: user, second: me })}\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\tuser.id === me.id ? (\n// \t\t\t\t\t\t\t\t\t\t<div></div>\n// \t\t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t\t{ console.log(\"no\") }\n// \t\t\t\t\t\t\t\t\t\t\t{ socket.emit(\"disconnect peer\", { first: user, second: me })}\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t)\n// \t\t\t\t\t\t})}\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n// \t\t\t</div>\n// \t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } />\n// \t\t</div>\n//   );\n// };\n\n// export default Room;"]},"metadata":{},"sourceType":"module"}