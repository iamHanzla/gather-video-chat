{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkapoor/gather-video-chat/client/src/Room.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n_c = Container;\nconst Row = styled.div`\n  display: flex;\n  width: 100%;\n`;\n_c2 = Row;\nconst Video = styled.video`\n  border: 1px solid blue;\n  width: 50%;\n  height: 50%;\n`;\n_c3 = Video;\n\nfunction App() {\n  _s();\n\n  const [yourID, setYourID] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io.connect(\"/\");\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n    });\n    socket.current.on(\"your id\", id => {\n      setYourID(id);\n    });\n    socket.current.on(\"all users\", users => {\n      setUsers(users);\n    });\n    socket.current.on(\"hey\", data => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setCallerSignal(data.signal);\n    });\n  }, []);\n\n  function callPeer(id) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"call user\", {\n        userToCall: id,\n        signalData: data,\n        from: yourID\n      });\n    });\n    peer.on(\"stream\", stream => {\n      if (partnerVideo.current) {\n        partnerVideo.current.srcObject = stream;\n      }\n    });\n    socket.current.on(\"call accepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n  }\n\n  function acceptCall() {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"accept call\", {\n        signal: data,\n        to: caller\n      });\n    });\n    peer.on(\"stream\", stream => {\n      partnerVideo.current.srcObject = stream;\n    });\n    peer.signal(callerSignal);\n  }\n\n  let UserVideo;\n\n  if (stream) {\n    UserVideo = /*#__PURE__*/_jsxDEV(Video, {\n      playsInline: true,\n      muted: true,\n      ref: userVideo,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n  let PartnerVideo;\n\n  if (callAccepted) {\n    PartnerVideo = /*#__PURE__*/_jsxDEV(Video, {\n      playsInline: true,\n      ref: partnerVideo,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n  let incomingCall;\n\n  if (receivingCall) {\n    incomingCall = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [caller, \" is calling you\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: acceptCall,\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [UserVideo, PartnerVideo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: Object.keys(users).map(key => {\n        if (key === yourID) {\n          return null;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => callPeer(key),\n          children: [\"Call \", key]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: incomingCall\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cS+RVRlORmnqKPnZY5LXZZa7HbQ=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Video\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/shubhamkapoor/gather-video-chat/client/src/Room.js"],"names":["React","useEffect","useState","useRef","io","Peer","styled","Container","div","Row","Video","video","App","yourID","setYourID","users","setUsers","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","userVideo","partnerVideo","socket","current","connect","navigator","mediaDevices","getUserMedia","audio","then","srcObject","on","id","data","from","signal","callPeer","peer","initiator","trickle","emit","userToCall","signalData","acceptCall","to","UserVideo","PartnerVideo","incomingCall","Object","keys","map","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,WAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;KAAMD,S;AAON,MAAME,GAAG,GAAGH,MAAM,CAACE,GAAI;AACvB;AACA;AACA,CAHA;MAAMC,G;AAKN,MAAMC,KAAK,GAAGJ,MAAM,CAACK,KAAM;AAC3B;AACA;AACA;AACA,CAJA;MAAMD,K;;AAMN,SAASE,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,EAApC;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,EAAhD;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMyB,SAAS,GAAGxB,MAAM,EAAxB;AACA,QAAMyB,YAAY,GAAGzB,MAAM,EAA3B;AACA,QAAM0B,MAAM,GAAG1B,MAAM,EAArB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,MAAM,CAACC,OAAP,GAAiB1B,EAAE,CAAC2B,OAAH,CAAW,GAAX,CAAjB;AACAC,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEvB,MAAAA,KAAK,EAAE,IAAT;AAAewB,MAAAA,KAAK,EAAE;AAAtB,KAApC,EAAkEC,IAAlE,CAAuEnB,MAAM,IAAI;AAC/EC,MAAAA,SAAS,CAACD,MAAD,CAAT;;AACA,UAAIU,SAAS,CAACG,OAAd,EAAuB;AACrBH,QAAAA,SAAS,CAACG,OAAV,CAAkBO,SAAlB,GAA8BpB,MAA9B;AACD;AACF,KALD;AAOAY,IAAAA,MAAM,CAACC,OAAP,CAAeQ,EAAf,CAAkB,SAAlB,EAA8BC,EAAD,IAAQ;AACnCzB,MAAAA,SAAS,CAACyB,EAAD,CAAT;AACD,KAFD;AAGAV,IAAAA,MAAM,CAACC,OAAP,CAAeQ,EAAf,CAAkB,WAAlB,EAAgCvB,KAAD,IAAW;AACxCC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAFD;AAIAc,IAAAA,MAAM,CAACC,OAAP,CAAeQ,EAAf,CAAkB,KAAlB,EAA0BE,IAAD,IAAU;AACjCpB,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,SAAS,CAACkB,IAAI,CAACC,IAAN,CAAT;AACAjB,MAAAA,eAAe,CAACgB,IAAI,CAACE,MAAN,CAAf;AACD,KAJD;AAKD,GArBQ,EAqBN,EArBM,CAAT;;AAuBA,WAASC,QAAT,CAAkBJ,EAAlB,EAAsB;AACpB,UAAMK,IAAI,GAAG,IAAIvC,IAAJ,CAAS;AACpBwC,MAAAA,SAAS,EAAE,IADS;AAEpBC,MAAAA,OAAO,EAAE,KAFW;AAGpB7B,MAAAA,MAAM,EAAEA;AAHY,KAAT,CAAb;AAMA2B,IAAAA,IAAI,CAACN,EAAL,CAAQ,QAAR,EAAkBE,IAAI,IAAI;AACxBX,MAAAA,MAAM,CAACC,OAAP,CAAeiB,IAAf,CAAoB,WAApB,EAAiC;AAAEC,QAAAA,UAAU,EAAET,EAAd;AAAkBU,QAAAA,UAAU,EAAET,IAA9B;AAAoCC,QAAAA,IAAI,EAAE5B;AAA1C,OAAjC;AACD,KAFD;AAIA+B,IAAAA,IAAI,CAACN,EAAL,CAAQ,QAAR,EAAkBrB,MAAM,IAAI;AAC1B,UAAIW,YAAY,CAACE,OAAjB,EAA0B;AACxBF,QAAAA,YAAY,CAACE,OAAb,CAAqBO,SAArB,GAAiCpB,MAAjC;AACD;AACF,KAJD;AAMAY,IAAAA,MAAM,CAACC,OAAP,CAAeQ,EAAf,CAAkB,eAAlB,EAAmCI,MAAM,IAAI;AAC3ChB,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAkB,MAAAA,IAAI,CAACF,MAAL,CAAYA,MAAZ;AACD,KAHD;AAKD;;AAED,WAASQ,UAAT,GAAsB;AACpBxB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,UAAMkB,IAAI,GAAG,IAAIvC,IAAJ,CAAS;AACpBwC,MAAAA,SAAS,EAAE,KADS;AAEpBC,MAAAA,OAAO,EAAE,KAFW;AAGpB7B,MAAAA,MAAM,EAAEA;AAHY,KAAT,CAAb;AAKA2B,IAAAA,IAAI,CAACN,EAAL,CAAQ,QAAR,EAAkBE,IAAI,IAAI;AACxBX,MAAAA,MAAM,CAACC,OAAP,CAAeiB,IAAf,CAAoB,aAApB,EAAmC;AAAEL,QAAAA,MAAM,EAAEF,IAAV;AAAgBW,QAAAA,EAAE,EAAE9B;AAApB,OAAnC;AACD,KAFD;AAIAuB,IAAAA,IAAI,CAACN,EAAL,CAAQ,QAAR,EAAkBrB,MAAM,IAAI;AAC1BW,MAAAA,YAAY,CAACE,OAAb,CAAqBO,SAArB,GAAiCpB,MAAjC;AACD,KAFD;AAIA2B,IAAAA,IAAI,CAACF,MAAL,CAAYnB,YAAZ;AACD;;AAED,MAAI6B,SAAJ;;AACA,MAAInC,MAAJ,EAAY;AACVmC,IAAAA,SAAS,gBACP,QAAC,KAAD;AAAO,MAAA,WAAW,MAAlB;AAAmB,MAAA,KAAK,MAAxB;AAAyB,MAAA,GAAG,EAAEzB,SAA9B;AAAyC,MAAA,QAAQ;AAAjD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,MAAI0B,YAAJ;;AACA,MAAI5B,YAAJ,EAAkB;AAChB4B,IAAAA,YAAY,gBACV,QAAC,KAAD;AAAO,MAAA,WAAW,MAAlB;AAAmB,MAAA,GAAG,EAAEzB,YAAxB;AAAsC,MAAA,QAAQ;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,MAAI0B,YAAJ;;AACA,MAAInC,aAAJ,EAAmB;AACjBmC,IAAAA,YAAY,gBACV;AAAA,8BACE;AAAA,mBAAKjC,MAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE6B,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AACD,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,GAAD;AAAA,iBACGE,SADH,EAEGC,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,GAAD;AAAA,gBACGE,MAAM,CAACC,IAAP,CAAYzC,KAAZ,EAAmB0C,GAAnB,CAAuBC,GAAG,IAAI;AAC7B,YAAIA,GAAG,KAAK7C,MAAZ,EAAoB;AAClB,iBAAO,IAAP;AACD;;AACD,4BACE;AAAQ,UAAA,OAAO,EAAE,MAAM8B,QAAQ,CAACe,GAAD,CAA/B;AAAA,8BAA4CA,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAPA;AADH;AAAA;AAAA;AAAA;AAAA,YALF,eAeE,QAAC,GAAD;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA1HQ1C,G;;MAAAA,G;AA4HT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Video = styled.video`\n  border: 1px solid blue;\n  width: 50%;\n  height: 50%;\n`;\n\nfunction App() {\n  const [yourID, setYourID] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const socket = useRef();\n\n  useEffect(() => {\n    socket.current = io.connect(\"/\");\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n      setStream(stream);\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n    })\n\n    socket.current.on(\"your id\", (id) => {\n      setYourID(id);\n    })\n    socket.current.on(\"all users\", (users) => {\n      setUsers(users);\n    })\n\n    socket.current.on(\"hey\", (data) => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setCallerSignal(data.signal);\n    })\n  }, []);\n\n  function callPeer(id) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream,\n    });\n\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"call user\", { userToCall: id, signalData: data, from: yourID })\n    })\n\n    peer.on(\"stream\", stream => {\n      if (partnerVideo.current) {\n        partnerVideo.current.srcObject = stream;\n      }\n    });\n\n    socket.current.on(\"call accepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    })\n\n  }\n\n  function acceptCall() {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream,\n    });\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"accept call\", { signal: data, to: caller })\n    })\n\n    peer.on(\"stream\", stream => {\n      partnerVideo.current.srcObject = stream;\n    });\n\n    peer.signal(callerSignal);\n  }\n\n  let UserVideo;\n  if (stream) {\n    UserVideo = (\n      <Video playsInline muted ref={userVideo} autoPlay />\n    );\n  }\n\n  let PartnerVideo;\n  if (callAccepted) {\n    PartnerVideo = (\n      <Video playsInline ref={partnerVideo} autoPlay />\n    );\n  }\n\n  let incomingCall;\n  if (receivingCall) {\n    incomingCall = (\n      <div>\n        <h1>{caller} is calling you</h1>\n        <button onClick={acceptCall}>Accept</button>\n      </div>\n    )\n  }\n  return (\n    <Container>\n      <Row>\n        {UserVideo}\n        {PartnerVideo}\n      </Row>\n      <Row>\n        {Object.keys(users).map(key => {\n          if (key === yourID) {\n            return null;\n          }\n          return (\n            <button onClick={() => callPeer(key)}>Call {key}</button>\n          );\n        })}\n      </Row>\n      <Row>\n        {incomingCall}\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}