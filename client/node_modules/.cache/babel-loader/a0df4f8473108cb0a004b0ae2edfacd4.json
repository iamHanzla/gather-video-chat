{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkapoor/gather-video-chat/client/src/Room.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nconst StyledVideo = styled.video`\n    height: 300px;\n    width: 300px;\n`;\n_c = StyledVideo;\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledVideo, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c2 = Video;\n\nfunction Room(props) {\n  _s2();\n\n  const [users, setUsers] = useState([]);\n  const [peers, setPeers] = useState([]);\n  const [myPos, setMyPos] = useState({\n    x: 400,\n    y: 100\n  });\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.roomID;\n  useEffect(() => {\n    socket.on('receive move', data => {\n      setUsers(data);\n    });\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      userVideo.current.srcObject = stream;\n      socket.emit(\"join room\", roomID);\n      socket.on(\"all users\", data => {\n        const peers = [];\n        data.userIDs.forEach(userID => {\n          let idxPos = data.position.findIndex(pos => pos.id === userID);\n\n          if (Math.abs(data.position[idxPos].x - myPos.x) <= 100 && Math.abs(data.position[idxPos].y - myPos.y) <= 100) {\n            const peer = createPeer(data.userIDs, socket.id, stream);\n            peersRef.current.push({\n              peerID: data.userIDs,\n              peer\n            });\n            peers.push({\n              peerID: data.userIDs,\n              peer\n            });\n          } else {\n            let idx = peers.findIndex(peer => peer.ID === data.userID);\n            let idxRef = peersRef.current.findIndex(peer => peer.peerID === data.userID);\n            let temp = peers;\n            temp.splice(idx, 1);\n            setPeers(temp);\n            peersRef.current.splice(idxRef, 1);\n          }\n        });\n        setPeers(peers);\n      });\n      socket.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        const peerObj = {\n          peer,\n          peerID: payload.callerID\n        };\n        setPeers(users => [...users, peerObj]);\n      });\n      socket.on(\"receiving returned signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n      socket.on(\"user left\", id => {\n        const peerObj = peersRef.current.find(p => p.peerID === id);\n\n        if (peerObj) {\n          peerObj.peer.destroy();\n        }\n\n        const peers = peersRef.current.filter(p => p.peerID !== id);\n        peersRef.current = peers;\n        setPeers(peers);\n      });\n    });\n  }, [socket]);\n\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  };\n\n  const addPeer = (incomingSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"returning signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  };\n\n  let setup = (p5, canvas) => {\n    let canv = p5.createCanvas(800, 600).parent(canvas);\n    let tempUsers = [];\n    tempUsers.push({\n      id: socket.id,\n      room: roomID,\n      x: 400,\n      y: 100\n    });\n    setUsers(tempUsers);\n  };\n\n  let draw = p5 => {\n    p5.background(\"rgb(255, 255, 255)\");\n    let idx = users.findIndex(user => user.id === socket.id);\n\n    if (idx !== -1) {\n      let tempUsers = users;\n\n      if (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n        tempUsers[idx].y = tempUsers[idx].y - 2;\n      }\n\n      if (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n        tempUsers[idx].x = tempUsers[idx].x - 2;\n      }\n\n      if (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n        tempUsers[idx].y = tempUsers[idx].y + 2;\n      }\n\n      if (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n        tempUsers[idx].x = tempUsers[idx].x + 2;\n      }\n\n      setUsers(tempUsers);\n      let data = {\n        id: socket.id,\n        room: roomID,\n        x: tempUsers[idx].x,\n        y: tempUsers[idx].y\n      };\n      setMyPos({\n        x: data.x,\n        y: data.y\n      });\n      socket.emit('send move', data);\n    }\n\n    for (let i = 0; i < users.length; i++) {\n      p5.circle(users[i].x, users[i].y, 16);\n    }\n  };\n\n  const proximity = peer => {\n    if (peer.peerID === socket.id) {\n      return false;\n    }\n\n    let X, Y;\n\n    for (let i = 0; i < users.length; i++) {\n      if (users[i].id === socket.id) {\n        X = users[i].x;\n        Y = users[i].y;\n        break;\n      }\n    }\n\n    for (let i = 0; i < users.length; i++) {\n      if (users[i].id === peer.peerID) {\n        if (Math.abs(users[i].x - X) < 100 && Math.abs(users[i].y - Y) < 100) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  const muteUnmute = e => {\n    const enabled = userVideo.current.srcObject.getAudioTracks()[0].enabled;\n\n    if (enabled) {\n      userVideo.current.srcObject.getAudioTracks()[0].enabled = false;\n    } else {\n      userVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n    }\n  };\n\n  const cameraOnOff = e => {\n    const enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n\n    if (enabled) {\n      userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n    } else {\n      userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n    }\n  };\n\n  const screenShare = e => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-canvas\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videobox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"mute\",\n            onClick: e => muteUnmute(e),\n            children: \" Mute \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"camera\",\n            onClick: e => cameraOnOff(e),\n            children: \" Camera \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"screenshare\",\n            onClick: e => screenShare(e),\n            children: \" ScreenShare \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StyledVideo, {\n          muted: true,\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 6\n        }, this), peers.map(peer => {\n          return /*#__PURE__*/_jsxDEV(Video, {\n            peer: peer.peer\n          }, peer.peerID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: setup,\n        draw: draw,\n        className: \"canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      className: \"chat\",\n      socket: socket,\n      room: roomID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(Room, \"RVFJquXwkneTWaJ0KCkirM8QBFA=\");\n\n_c3 = Room;\n;\nexport default Room;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledVideo\");\n$RefreshReg$(_c2, \"Video\");\n$RefreshReg$(_c3, \"Room\");","map":{"version":3,"sources":["/Users/shubhamkapoor/gather-video-chat/client/src/Room.js"],"names":["React","useEffect","useRef","useState","io","Peer","Sketch","styled","Chat","socket","connect","StyledVideo","video","Video","props","ref","peer","on","stream","current","srcObject","Room","users","setUsers","peers","setPeers","myPos","setMyPos","x","y","userVideo","peersRef","roomID","match","params","data","navigator","mediaDevices","getUserMedia","audio","then","emit","userIDs","forEach","userID","idxPos","position","findIndex","pos","id","Math","abs","createPeer","push","peerID","idx","ID","idxRef","temp","splice","payload","addPeer","signal","callerID","peerObj","item","find","p","destroy","filter","userToSignal","initiator","trickle","incomingSignal","setup","p5","canvas","canv","createCanvas","parent","tempUsers","room","draw","background","user","keyIsDown","i","length","circle","proximity","X","Y","muteUnmute","e","enabled","getAudioTracks","cameraOnOff","getVideoTracks","screenShare","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from './Chat';\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nconst StyledVideo = styled.video`\n    height: 300px;\n    width: 300px;\n`;\n\nconst Video = (props) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        props.peer.on(\"stream\", stream => {\n            ref.current.srcObject = stream;\n        })\n    }, []);\n\n    return (\n        <StyledVideo playsInline autoPlay ref={ ref } />\n    );\n}\n\nfunction Room(props) {\n\t\tconst [users, setUsers] = useState([]);\n    const [peers, setPeers] = useState([]);\n\t\tconst [myPos, setMyPos] = useState({ x: 400, y: 100 });\n    const userVideo = useRef();\n    const peersRef = useRef([]);\n    const roomID = props.match.params.roomID;\n\n    useEffect(() => {\n\t\t\tsocket.on('receive move', (data) => {\n\t\t\t\tsetUsers(data);\n\t\t\t})\n      navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n      userVideo.current.srcObject = stream;\n\t\t\tsocket.emit(\"join room\", roomID);\n      socket.on(\"all users\", data => {\n      \tconst peers = [];\n        data.userIDs.forEach(userID => {\n\t\t\t\t\tlet idxPos = data.position.findIndex(pos => pos.id === userID);\n\t\t\t\t\tif (Math.abs(data.position[idxPos].x - myPos.x) <= 100 && Math.abs(data.position[idxPos].y - myPos.y) <= 100) {\n\t\t\t\t\t\tconst peer = createPeer(data.userIDs, socket.id, stream);\n\t\t\t\t\t\tpeersRef.current.push({\n\t\t\t\t\t\t\tpeerID: data.userIDs,\n\t\t\t\t\t\t\tpeer,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tpeers.push({\n\t\t\t\t\t\t\tpeerID: data.userIDs,\n\t\t\t\t\t\t\tpeer,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet idx = peers.findIndex((peer) => peer.ID === data.userID);\n\t\t\t\t\t\tlet idxRef = peersRef.current.findIndex((peer) => peer.peerID === data.userID);\n\t\t\t\t\t\tlet temp = peers;\n\t\t\t\t\t\ttemp.splice(idx, 1);\n\t\t\t\t\t\tsetPeers(temp);\n\t\t\t\t\t\tpeersRef.current.splice(idxRef, 1);\n\t\t\t\t\t}\n\t  \t  })\n\t      setPeers(peers);\n      })\n\n      socket.on(\"user joined\", payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n        \tpeerID: payload.callerID,\n        \tpeer,\n        })\n\n\t\t\t\tconst peerObj = {\n\t\t\t\t\tpeer,\n\t\t\t\t\tpeerID: payload.callerID,\n\t\t\t\t}\n      setPeers(users => [...users, peerObj]);\n\t\t});\n\n    \tsocket.on(\"receiving returned signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n     });\n\n\t\t\tsocket.on(\"user left\", id => {\n\t\t\t\tconst peerObj = peersRef.current.find(p => p.peerID === id);\n\t\t\t\tif (peerObj) {\n\t\t\t\t\tpeerObj.peer.destroy();\n\t\t\t\t}\n\t\t\t\tconst peers = peersRef.current.filter(p => p.peerID !== id);\n\t\t\t\tpeersRef.current = peers;\n\t\t\t\tsetPeers(peers);\n\t\t\t})\n    })\n    }, [socket]);\n\n    const createPeer = (userToSignal, callerID, stream) => {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream,\n        });\n\n        peer.on(\"signal\", signal => {\n            socket.emit(\"sending signal\", { userToSignal, callerID, signal })\n        })\n\n        return peer;\n    }\n\n    const addPeer = (incomingSignal, callerID, stream) => {\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream,\n        })\n\n        peer.on(\"signal\", signal => {\n            socket.emit(\"returning signal\", { signal, callerID })\n        })\n\n        peer.signal(incomingSignal);\n\n        return peer;\n    }\n\n\tlet setup = (p5, canvas) => {\n\t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n\t\tlet tempUsers = [];\n\t\ttempUsers.push({\n\t\t\tid: socket.id,\n\t\t\troom: roomID,\n\t\t\tx: 400,\n\t\t\ty: 100\n\t\t});\n\t\t\n\t\tsetUsers(tempUsers);\n\t}\n\n\tlet draw = (p5) => {\n\t\tp5.background(\"rgb(255, 255, 255)\");\n\n\t\tlet idx = users.findIndex((user) => user.id === socket.id)\n\t\tif (idx !== -1) {\n\t\t\tlet tempUsers = users;\n\n\t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n\t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n\t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n\t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n\t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n\t\t\t}\t\n\t\t\t\n\t\t\tsetUsers(tempUsers);\n\t\t\tlet data = {\n\t\t\t\tid: socket.id,\n\t\t\t\troom: roomID,\n\t\t\t\tx: tempUsers[idx].x,\n\t\t\t\ty: tempUsers[idx].y\t\n\t\t\t}\n\t\t\tsetMyPos({ x: data.x, y: data.y });\n\t\t\tsocket.emit('send move', data);\n\t\t}\n\t\tfor (let i = 0; i < users.length; i ++) {\n\t\t\tp5.circle(users[i].x, users[i].y, 16);\n\t\t}\n\t}\n\n\tconst proximity = (peer) => {\n\t\tif (peer.peerID === socket.id) {\n\t\t\treturn false;\n\t\t}\n\t\tlet X, Y;\n\t\tfor (let i = 0; i < users.length; i ++) {\n\t\t\tif (users[i].id === socket.id) {\n\t\t\t\tX = users[i].x;\n\t\t\t\tY = users[i].y;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < users.length; i ++) {\n\t\t\tif (users[i].id === peer.peerID) {\n\t\t\t\tif (Math.abs(users[i].x - X) < 100 && Math.abs(users[i].y - Y) < 100) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tconst muteUnmute = (e) => {\n\t\tconst enabled = userVideo.current.srcObject.getAudioTracks()[0].enabled;\n\t\tif (enabled) {\n\t\t\tuserVideo.current.srcObject.getAudioTracks()[0].enabled = false;\t\n\t\t} else {\n\t\t\tuserVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n\t\t}\n\t}\n\n\tconst cameraOnOff = (e) => {\n\t\tconst enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n\t\tif (enabled) {\n\t\t\tuserVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n\t\t} else {\n\t\t\tuserVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n\t\t}\n\t}\n\n\tconst screenShare = (e) => {\n\n\t}\t\n\n    return (\n\t\t<div className=\"room\">\n\t\t\t<div className=\"video-canvas\">\n\t\t\t\t<div className=\"videobox\">\n\t\t\t\t\t<div className=\"buttonbox\">\n\t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n\t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n\t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<StyledVideo muted ref={ userVideo } autoPlay playsInline />\n    \t    \t{ peers.map((peer) => {\n    \t        return (\n         \t      <Video key={ peer.peerID } peer={ peer.peer } />\n\t\t\t\t\t\t\t)\n    \t    \t})}\n\t\t\t\t</div>\n\t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n\t\t\t</div>\n\t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } />\n\t\t</div>\n    );\n};\n\nexport default Room;"]},"metadata":{},"sourceType":"module"}