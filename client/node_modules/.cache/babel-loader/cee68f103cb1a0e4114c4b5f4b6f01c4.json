{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkapoor/gather-video-chat/client/src/Room.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nconst StyledVideo = styled.video`\n\theight: 300px;\n\twidth: 300px;\n`;\n_c = StyledVideo;\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledVideo, {\n    playsInLine: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c2 = Video;\n\nfunction Room(props) {\n  _s2();\n\n  const [users, setUsers] = useState([]);\n  const [connected, setConnected] = useState([]);\n  const [me, setMe] = useState({});\n  const myVideo = useRef();\n  const roomID = props.match.params.roomID;\n  useEffect(() => {\n    socket.emit(\"join room\", roomID);\n\n    const getUserMedia = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        myVideo.current.srcObject = stream;\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getUserMedia();\n  }, []);\n  useEffect(() => {\n    socket.on('receive move', data => {\n      if (data !== users) {\n        setUsers(data);\n      }\n    });\n  }, [socket]);\n\n  let setup = (p5, canvas) => {\n    let canv = p5.createCanvas(800, 600).parent(canvas);\n    let tempUsers = [];\n    setMe({\n      id: socket.id,\n      room: roomID,\n      x: 400,\n      y: 100\n    });\n    tempUsers.push({\n      id: socket.id,\n      room: roomID,\n      x: 400,\n      y: 100\n    });\n    setUsers(tempUsers);\n  };\n\n  let draw = p5 => {\n    p5.background(\"rgb(255, 255, 255)\");\n    let idx = users.findIndex(user => user.id === socket.id);\n\n    if (idx !== -1) {\n      let tempUsers = users;\n\n      if (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n        tempUsers[idx].y = tempUsers[idx].y - 2;\n      }\n\n      if (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n        tempUsers[idx].x = tempUsers[idx].x - 2;\n      }\n\n      if (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n        tempUsers[idx].y = tempUsers[idx].y + 2;\n      }\n\n      if (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n        tempUsers[idx].x = tempUsers[idx].x + 2;\n      }\n\n      let data = {\n        id: socket.id,\n        room: roomID,\n        x: tempUsers[idx].x,\n        y: tempUsers[idx].y\n      };\n\n      if (data.x !== tempUsers[idx].x || data.y !== tempUsers[idx].y) {\n        setMe(data);\n        setUsers(tempUsers);\n        socket.emit('send move', data);\n      }\n    }\n\n    for (let i = 0; i < users.length; i++) {\n      p5.circle(users[i].x, users[i].y, 16);\n    }\n  };\n\n  const muteUnmute = e => {};\n\n  const cameraOnOff = e => {};\n\n  const screenShare = e => {};\n\n  const proximity = user => {\n    if (user.id === me.id) {\n      return false;\n    }\n\n    if ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const connectPeer = user => {\n    setConnected([...connected, user.id]);\n  };\n\n  const disconnectPeer = user => {\n    if (connected.findIndex(u => u.id === user.id) === -1) {\n      return;\n    }\n\n    let idx = connected.findIndex(user.id);\n    connected.splice(idx, 1);\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-canvas\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videobox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"mute\",\n            onClick: e => muteUnmute(e),\n            children: \" Mute \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"camera\",\n            onClick: e => cameraOnOff(e),\n            children: \" Camera \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"screenshare\",\n            onClick: e => screenShare(e),\n            children: \" ScreenShare \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StyledVideo, {\n          muted: true,\n          ref: myVideo,\n          autoPlay: true,\n          playsInLine: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videos\",\n          children: users.map(user => {\n            return proximity(user) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: connectPeer(user)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 10\n            }, this) : user.id === me.id ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 11\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: disconnectPeer(user)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 11\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: setup,\n        draw: draw,\n        className: \"canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      className: \"chat\",\n      socket: socket,\n      room: roomID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(Room, \"AbxNluhPo9xqWX+IlcyOK8jwTjQ=\");\n\n_c3 = Room;\n;\nexport default Room; // import React, { useEffect, useRef, useState } from \"react\";\n// import io from \"socket.io-client\";\n// import Peer from \"simple-peer\";\n// import \"./Room.css\";\n// import Sketch from 'react-p5';\n// import styled from \"styled-components\";\n// import Chat from './Chat';\n// const socket = io.connect(\"http://localhost:3001\");\n// const StyledVideo = styled.video`\n// \theight: 300px;\n// \twidth: 300px;\n// `;\n// const Video = (props) => {\n// \tconst ref = useRef();\n// \tuseEffect(() => {\n// \t\tprops.peer.on(\"stream\", stream => {\n// \t\t\t\tref.current.srcObject = stream;\n// \t\t})\n// \t}, []);\n// \treturn (\n// \t\t<StyledVideo playsInLine autoPlay ref={ ref } />\n// \t);\n// }\n// function Room(props) {\n// \t\tconst [users, setUsers] = useState([]);\n// \t\tconst [me, setMe] = useState({});\n// \t\tconst myVideo = useRef();\n//     const roomID = props.match.params.roomID;\n// useEffect(() => {\n// \tsocket.emit(\"join room\", roomID);\n// \tconst getUserMedia = async () => {\n// \t\ttry {\n// \t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n// \t\t\tmyVideo.current.srcObject = stream;\n// \t\t} catch (err) {\n// \t\t\tconsole.log(err)\n// \t\t}\n// \t}\n// \tgetUserMedia();\n// }, []);\n// \tuseEffect(() => {\n// \t\tsocket.on('receive move', (data) => {\n// \t\t\tsetUsers(data);\n// \t\t})\n// \t}, [socket]);\n// \tlet setup = (p5, canvas) => {\n// \t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n// \t\tlet tempUsers = [];\n// \t\tsetMe({ id: socket.id, room: roomID, x: 400, y: 100 });\n// \t\ttempUsers.push({\n// \t\t\tid: socket.id,\n// \t\t\troom: roomID,\n// \t\t\tx: 400,\n// \t\t\ty: 100\n// \t\t});\n// \t\tsetUsers(tempUsers);\n// \t}\n// \tlet draw = (p5) => {\n// \t\tp5.background(\"rgb(255, 255, 255)\");\n// \t\tlet idx = users.findIndex((user) => user.id === socket.id)\n// \t\tif (idx !== -1) {\n// \t\t\tlet tempUsers = users;\n// \t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n// \t\t\t}\t\n// \t\t\tsetUsers(tempUsers);\n// \t\t\tlet data = {\n// \t\t\t\tid: socket.id,\n// \t\t\t\troom: roomID,\n// \t\t\t\tx: tempUsers[idx].x,\n// \t\t\t\ty: tempUsers[idx].y\t\n// \t\t\t}\n// \t\t\tsetMe(data);\n// \t\t\tsocket.emit('send move', data);\n// \t\t}\n// \t\tfor (let i = 0; i < users.length; i ++) {\n// \t\t\tp5.circle(users[i].x, users[i].y, 16);\n// \t\t}\n// \t}\n// \tconst muteUnmute = (e) => {\n// \t}\n// \tconst cameraOnOff = (e) => {\n// \t}\n// \tconst screenShare = (e) => {\n// \t}\n// \tconst proximity = (user) => {\n// \t\tif (user.id === me.id) {\n// \t\t\treturn false;\n// \t\t}\n// \t\tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n// \t\t\treturn true;\n// \t\t} else {\n// \t\t\treturn false;\n// \t\t}\n// \t}\t\n//   return (\n// \t\t<div className=\"room\">\n// \t\t\t<div className=\"video-canvas\">\n// \t\t\t\t<div className=\"videobox\">\n// \t\t\t\t\t<div className=\"buttonbox\">\n// \t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n// \t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n// \t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<StyledVideo muted ref={ myVideo } autoPlay playsInLine />\n// \t\t\t\t\t<div className=\"videos\">\n// \t\t\t\t\t\t{ users.map(user => {\n// \t\t\t\t\t\t\treturn(\n// \t\t\t\t\t\t\t\tproximity(user) ? (\n// \t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t{ console.log(\"yes\") }\n// \t\t\t\t\t\t\t\t\t\t{ socket.emit(\"connect peer\", { first: user, second: me })}\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\tuser.id === me.id ? (\n// \t\t\t\t\t\t\t\t\t\t<div></div>\n// \t\t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t\t{ console.log(\"no\") }\n// \t\t\t\t\t\t\t\t\t\t\t{ socket.emit(\"disconnect peer\", { first: user, second: me })}\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t)\n// \t\t\t\t\t\t})}\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n// \t\t\t</div>\n// \t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } />\n// \t\t</div>\n//   );\n// };\n// export default Room;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledVideo\");\n$RefreshReg$(_c2, \"Video\");\n$RefreshReg$(_c3, \"Room\");","map":{"version":3,"sources":["/Users/shubhamkapoor/gather-video-chat/client/src/Room.js"],"names":["React","useEffect","useRef","useState","io","Peer","Sketch","styled","Chat","socket","connect","StyledVideo","video","Video","props","ref","peer","on","stream","current","srcObject","Room","users","setUsers","connected","setConnected","me","setMe","myVideo","roomID","match","params","emit","getUserMedia","navigator","mediaDevices","audio","err","console","log","data","setup","p5","canvas","canv","createCanvas","parent","tempUsers","id","room","x","y","push","draw","background","idx","findIndex","user","keyIsDown","i","length","circle","muteUnmute","e","cameraOnOff","screenShare","proximity","connectPeer","disconnectPeer","u","splice","map"],"mappings":"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;AADH;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAwBC,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAGhB,KAAhB;AAAwB,QAAA,IAAI,EAAGY,IAA/B;AAAsC,QAAA,SAAS,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cAxBD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eA2BC,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,MAAM,EAAG5C,MAAhC;AAAyC,MAAA,IAAI,EAAGoB;AAAhD;AAAA;AAAA;AAAA;AAAA,YA3BD;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA+BD;;IArJQR,I;;MAAAA,I;AAqJR;AAED,eAAeA,IAAf,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEE;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AAEF;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from './Chat';\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nconst StyledVideo = styled.video`\n\theight: 300px;\n\twidth: 300px;\n`;\n\nconst Video = (props) => {\n\tconst ref = useRef();\n\n\tuseEffect(() => {\n\t\tprops.peer.on(\"stream\", stream => {\n\t\t\t\tref.current.srcObject = stream;\n\t\t})\n\t}, []);\n\n\treturn (\n\t\t<StyledVideo playsInLine autoPlay ref={ ref } />\n\t);\n}\n\nfunction Room(props) {\n\t\tconst [users, setUsers] = useState([]);\n\t\tconst [connected, setConnected] = useState([]);\n\t\tconst [me, setMe] = useState({});\n\t\t\n\t\tconst myVideo = useRef();\n    const roomID = props.match.params.roomID;\n\n\t\tuseEffect(() => {\n\t\t\tsocket.emit(\"join room\", roomID);\n\t\t\tconst getUserMedia = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n\t\t\t\t\tmyVideo.current.srcObject = stream;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t}\n\t\t\t}\n\t\t\tgetUserMedia();\n\t\t}, []);\n\n\tuseEffect(() => {\n\t\tsocket.on('receive move', (data) => {\n\t\t\tif (data !== users) {\n\t\t\t\tsetUsers(data);\n\t\t\t}\n\t\t})\n\t}, [socket]);\n\n\tlet setup = (p5, canvas) => {\n\t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n\t\tlet tempUsers = [];\n\t\tsetMe({ id: socket.id, room: roomID, x: 400, y: 100 });\n\t\ttempUsers.push({\n\t\t\tid: socket.id,\n\t\t\troom: roomID,\n\t\t\tx: 400,\n\t\t\ty: 100\n\t\t});\n\t\t\n\t\tsetUsers(tempUsers);\n\t}\n\n\tlet draw = (p5) => {\n\t\tp5.background(\"rgb(255, 255, 255)\");\n\n\t\tlet idx = users.findIndex((user) => user.id === socket.id)\n\t\tif (idx !== -1) {\n\t\t\tlet tempUsers = users;\n\n\t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n\t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n\t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n\t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n\t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n\t\t\t}\t\n\t\t\t\n\t\t\tlet data = {\n\t\t\t\tid: socket.id,\n\t\t\t\troom: roomID,\n\t\t\t\tx: tempUsers[idx].x,\n\t\t\t\ty: tempUsers[idx].y\t\n\t\t\t}\n\n\t\t\tif (data.x !== tempUsers[idx].x || data.y !== tempUsers[idx].y) {\n\t\t\t\tsetMe(data);\n\t\t\t\tsetUsers(tempUsers);\n\t\t\t\tsocket.emit('send move', data);\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < users.length; i ++) {\n\t\t\tp5.circle(users[i].x, users[i].y, 16);\n\t\t}\n\t}\n\n\tconst muteUnmute = (e) => {\n\n\t}\n\n\tconst cameraOnOff = (e) => {\n\n\t}\n\n\tconst screenShare = (e) => {\n\n\t}\n\n\tconst proximity = (user) => {\n\t\tif (user.id === me.id) {\n\t\t\treturn false;\n\t\t}\n\t\tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\t\n\n\tconst connectPeer = (user) => {\n\t\tsetConnected([...connected, user.id]);\n\t}\n\n\tconst disconnectPeer = (user) => {\n\t\tif (connected.findIndex(u => u.id === user.id) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet idx = connected.findIndex(user.id);\n\t\tconnected.splice(idx, 1);\n\t\treturn;\n\t}\n\n  return (\n\t\t<div className=\"room\">\n\t\t\t<div className=\"video-canvas\">\n\t\t\t\t<div className=\"videobox\">\n\t\t\t\t\t<div className=\"buttonbox\">\n\t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n\t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n\t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<StyledVideo muted ref={ myVideo } autoPlay playsInLine />\n\t\t\t\t\t<div className=\"videos\">\n\t\t\t\t\t\t{ users.map(user => {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\tproximity(user) ? (\n\t\t\t\t\t\t\t\t\t<div>{ connectPeer(user) }</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\tuser.id === me.id ? (\n\t\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<div>{ disconnectPeer(user) }</div>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n\t\t\t</div>\n\t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } />\n\t\t</div>\n  );\n};\n\nexport default Room;\n\n\n\n\n\n\n\n// import React, { useEffect, useRef, useState } from \"react\";\n// import io from \"socket.io-client\";\n// import Peer from \"simple-peer\";\n// import \"./Room.css\";\n// import Sketch from 'react-p5';\n// import styled from \"styled-components\";\n// import Chat from './Chat';\n\n// const socket = io.connect(\"http://localhost:3001\");\n\n// const StyledVideo = styled.video`\n// \theight: 300px;\n// \twidth: 300px;\n// `;\n\n// const Video = (props) => {\n// \tconst ref = useRef();\n\n// \tuseEffect(() => {\n// \t\tprops.peer.on(\"stream\", stream => {\n// \t\t\t\tref.current.srcObject = stream;\n// \t\t})\n// \t}, []);\n\n// \treturn (\n// \t\t<StyledVideo playsInLine autoPlay ref={ ref } />\n// \t);\n// }\n\n// function Room(props) {\n// \t\tconst [users, setUsers] = useState([]);\n// \t\tconst [me, setMe] = useState({});\n\t\t\n// \t\tconst myVideo = useRef();\n//     const roomID = props.match.params.roomID;\n\n  // useEffect(() => {\n\t// \tsocket.emit(\"join room\", roomID);\n\t// \tconst getUserMedia = async () => {\n\t// \t\ttry {\n\t// \t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n\t// \t\t\tmyVideo.current.srcObject = stream;\n\t// \t\t} catch (err) {\n\t// \t\t\tconsole.log(err)\n\t// \t\t}\n\t// \t}\n\t// \tgetUserMedia();\n  // }, []);\n\n// \tuseEffect(() => {\n// \t\tsocket.on('receive move', (data) => {\n// \t\t\tsetUsers(data);\n// \t\t})\n// \t}, [socket]);\n\n// \tlet setup = (p5, canvas) => {\n// \t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n// \t\tlet tempUsers = [];\n// \t\tsetMe({ id: socket.id, room: roomID, x: 400, y: 100 });\n// \t\ttempUsers.push({\n// \t\t\tid: socket.id,\n// \t\t\troom: roomID,\n// \t\t\tx: 400,\n// \t\t\ty: 100\n// \t\t});\n\t\t\n// \t\tsetUsers(tempUsers);\n// \t}\n\n// \tlet draw = (p5) => {\n// \t\tp5.background(\"rgb(255, 255, 255)\");\n\n// \t\tlet idx = users.findIndex((user) => user.id === socket.id)\n// \t\tif (idx !== -1) {\n// \t\t\tlet tempUsers = users;\n\n// \t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n// \t\t\t}\t\n\t\t\t\n// \t\t\tsetUsers(tempUsers);\n// \t\t\tlet data = {\n// \t\t\t\tid: socket.id,\n// \t\t\t\troom: roomID,\n// \t\t\t\tx: tempUsers[idx].x,\n// \t\t\t\ty: tempUsers[idx].y\t\n// \t\t\t}\n// \t\t\tsetMe(data);\n// \t\t\tsocket.emit('send move', data);\n// \t\t}\n// \t\tfor (let i = 0; i < users.length; i ++) {\n// \t\t\tp5.circle(users[i].x, users[i].y, 16);\n// \t\t}\n// \t}\n\n// \tconst muteUnmute = (e) => {\n\n// \t}\n\n// \tconst cameraOnOff = (e) => {\n\n// \t}\n\n// \tconst screenShare = (e) => {\n\n// \t}\n\n// \tconst proximity = (user) => {\n// \t\tif (user.id === me.id) {\n// \t\t\treturn false;\n// \t\t}\n// \t\tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n// \t\t\treturn true;\n// \t\t} else {\n// \t\t\treturn false;\n// \t\t}\n// \t}\t\n\n//   return (\n// \t\t<div className=\"room\">\n// \t\t\t<div className=\"video-canvas\">\n// \t\t\t\t<div className=\"videobox\">\n// \t\t\t\t\t<div className=\"buttonbox\">\n// \t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n// \t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n// \t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<StyledVideo muted ref={ myVideo } autoPlay playsInLine />\n// \t\t\t\t\t<div className=\"videos\">\n// \t\t\t\t\t\t{ users.map(user => {\n// \t\t\t\t\t\t\treturn(\n// \t\t\t\t\t\t\t\tproximity(user) ? (\n// \t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t{ console.log(\"yes\") }\n// \t\t\t\t\t\t\t\t\t\t{ socket.emit(\"connect peer\", { first: user, second: me })}\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\tuser.id === me.id ? (\n// \t\t\t\t\t\t\t\t\t\t<div></div>\n// \t\t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t\t{ console.log(\"no\") }\n// \t\t\t\t\t\t\t\t\t\t\t{ socket.emit(\"disconnect peer\", { first: user, second: me })}\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t)\n// \t\t\t\t\t\t})}\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n// \t\t\t</div>\n// \t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } />\n// \t\t</div>\n//   );\n// };\n\n// export default Room;"]},"metadata":{},"sourceType":"module"}