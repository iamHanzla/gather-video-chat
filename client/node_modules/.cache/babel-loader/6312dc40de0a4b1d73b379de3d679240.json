{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkapoor/gather-video-chat/client/src/Room.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nconst StyledVideo = styled.video`\n\theight: 300px;\n\twidth: 300px;\n`;\n_c = StyledVideo;\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledVideo, {\n    playsInLine: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c2 = Video;\n\nfunction Room(props) {\n  _s2();\n\n  const [users, setUsers] = useState([]);\n  const [peers, setPeers] = useState([]);\n  const [stream, setStream] = useState();\n  const [connected, setConnected] = useState({});\n  const myVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.roomID;\n  useEffect(() => {\n    socket.emit(\"join room\", roomID);\n\n    const getUserMedia = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        myVideo.current.srcObject = stream;\n        setStream(stream);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getUserMedia();\n  }, []);\n  useEffect(() => {\n    socket.on('receive move', data => {\n      setUsers(data.all);\n\n      for (let i = 0; i < data.all.length; i++) {\n        if (data.all[i].id === data.me.id) {\n          continue;\n        }\n\n        let closer = proximity(data.all[i], data.me);\n\n        if (closer && connected[data.all[i].id] === undefined) {\n          connectPeer(data.all[i]);\n        } else if (!closer && connected[data.all[i].id] !== undefined) {\n          disconnectPeer(data.all[i]);\n        }\n      }\n    });\n  }, [socket]);\n\n  let setup = (p5, canvas) => {\n    let canv = p5.createCanvas(800, 600).parent(canvas);\n    let tempUsers = [];\n    tempUsers.push({\n      id: socket.id,\n      room: roomID,\n      x: 400,\n      y: 100\n    });\n    setUsers(tempUsers);\n  };\n\n  let draw = p5 => {\n    p5.background(\"rgb(255, 255, 255)\");\n    let idx = users.findIndex(user => user.id === socket.id);\n\n    if (idx !== -1) {\n      let tempUsers = users;\n\n      if (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n        tempUsers[idx].y = tempUsers[idx].y - 2;\n      }\n\n      if (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n        tempUsers[idx].x = tempUsers[idx].x - 2;\n      }\n\n      if (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n        tempUsers[idx].y = tempUsers[idx].y + 2;\n      }\n\n      if (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n        tempUsers[idx].x = tempUsers[idx].x + 2;\n      }\n\n      let data = {\n        id: socket.id,\n        room: roomID,\n        x: tempUsers[idx].x,\n        y: tempUsers[idx].y\n      };\n      setUsers(tempUsers);\n      socket.emit('send move', data);\n    }\n\n    for (let i = 0; i < users.length; i++) {\n      p5.circle(users[i].x, users[i].y, 16);\n    }\n  };\n\n  const muteUnmute = e => {};\n\n  const cameraOnOff = e => {};\n\n  const screenShare = e => {};\n\n  const proximity = (user, me) => {\n    if ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const connectPeer = user => {\n    console.log(\"connecting\");\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: myVideo.current.srcObject\n    });\n    peer.on('signal', data => {\n      peer.signal(data);\n    });\n    let temp = connected;\n    temp[user.id] = true;\n    setConnected(temp);\n    return;\n  };\n\n  const disconnectPeer = user => {\n    console.log(\"disconnecting\");\n    let temp = connected;\n    delete temp[user.id];\n    setConnected(temp);\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-canvas\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videobox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"mute\",\n            onClick: e => muteUnmute(e),\n            children: \" Mute \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"camera\",\n            onClick: e => cameraOnOff(e),\n            children: \" Camera \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"screenshare\",\n            onClick: e => screenShare(e),\n            children: \" ScreenShare \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StyledVideo, {\n          muted: true,\n          ref: myVideo,\n          autoPlay: true,\n          playsInLine: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videos\",\n          children: peers.map((peer, idx) => {\n            return /*#__PURE__*/_jsxDEV(Video, {\n              peer: peer\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: setup,\n        draw: draw,\n        className: \"canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      className: \"chat\",\n      socket: socket,\n      room: roomID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(Room, \"ipzKzozR4G6WlhFjUpLz76oCs20=\");\n\n_c3 = Room;\n;\nexport default Room;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledVideo\");\n$RefreshReg$(_c2, \"Video\");\n$RefreshReg$(_c3, \"Room\");","map":{"version":3,"sources":["/Users/shubhamkapoor/gather-video-chat/client/src/Room.js"],"names":["React","useEffect","useRef","useState","io","Peer","Sketch","styled","Chat","socket","connect","StyledVideo","video","Video","props","ref","peer","on","stream","current","srcObject","Room","users","setUsers","peers","setPeers","setStream","connected","setConnected","myVideo","peersRef","roomID","match","params","emit","getUserMedia","navigator","mediaDevices","audio","err","console","log","data","all","i","length","id","me","closer","proximity","undefined","connectPeer","disconnectPeer","setup","p5","canvas","canv","createCanvas","parent","tempUsers","push","room","x","y","draw","background","idx","findIndex","user","keyIsDown","circle","muteUnmute","e","cameraOnOff","screenShare","initiator","trickle","signal","temp","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from './Chat';\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nconst StyledVideo = styled.video`\n\theight: 300px;\n\twidth: 300px;\n`;\n\nconst Video = (props) => {\n\tconst ref = useRef();\n\n\tuseEffect(() => {\n\t\tprops.peer.on(\"stream\", stream => {\n\t\t\t\tref.current.srcObject = stream;\n\t\t})\n\t}, []);\n\n\treturn (\n\t\t<StyledVideo playsInLine autoPlay ref={ ref } />\n\t);\n}\n\nfunction Room(props) {\n\t\tconst [users, setUsers] = useState([]);\n\t\tconst [peers, setPeers] = useState([]);\n\t\tconst [stream, setStream] = useState();\n\t\tconst [connected, setConnected] = useState({});\n\t\tconst myVideo = useRef();\n\t\tconst peersRef = useRef([]);\n    const roomID = props.match.params.roomID;\n\n\t\tuseEffect(() => {\n\t\t\tsocket.emit(\"join room\", roomID);\n\t\t\tconst getUserMedia = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n\t\t\t\t\tmyVideo.current.srcObject = stream;\n\t\t\t\t\tsetStream(stream);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t}\n\t\t\t}\n\t\t\tgetUserMedia();\n\t\t}, []);\n\n\tuseEffect(() => {\n\t\tsocket.on('receive move', (data) => {\n\t\t\tsetUsers(data.all);\n\t\t\tfor (let i = 0; i < data.all.length; i ++) {\n\t\t\t\tif (data.all[i].id === data.me.id) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet closer = proximity(data.all[i], data.me)\n\t\t\t\tif (closer && connected[data.all[i].id] === undefined) {\n\t\t\t\t\tconnectPeer(data.all[i]);\n\t\t\t\t} else if (!closer && connected[data.all[i].id] !== undefined) {\n\t\t\t\t\tdisconnectPeer(data.all[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}, [socket]);\n\n\tlet setup = (p5, canvas) => {\n\t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n\t\tlet tempUsers = [];\n\t\ttempUsers.push({\n\t\t\tid: socket.id,\n\t\t\troom: roomID,\n\t\t\tx: 400,\n\t\t\ty: 100\n\t\t});\n\t\t\n\t\tsetUsers(tempUsers);\n\t}\n\n\tlet draw = (p5) => {\n\t\tp5.background(\"rgb(255, 255, 255)\");\n\n\t\tlet idx = users.findIndex((user) => user.id === socket.id)\n\t\tif (idx !== -1) {\n\t\t\tlet tempUsers = users;\n\n\t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n\t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n\t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n\t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n\t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n\t\t\t}\t\n\t\t\t\n\t\t\tlet data = {\n\t\t\t\tid: socket.id,\n\t\t\t\troom: roomID,\n\t\t\t\tx: tempUsers[idx].x,\n\t\t\t\ty: tempUsers[idx].y\t\n\t\t\t}\n\n\t\t\tsetUsers(tempUsers);\n\t\t\tsocket.emit('send move', data);\n\t\t}\n\n\t\tfor (let i = 0; i < users.length; i ++) {\n\t\t\tp5.circle(users[i].x, users[i].y, 16);\n\t\t}\n\t}\n\n\tconst muteUnmute = (e) => {\n\n\t}\n\n\tconst cameraOnOff = (e) => {\n\n\t}\n\n\tconst screenShare = (e) => {\n\n\t}\n\n\tconst proximity = (user, me) => {\n\t\tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\t\n\n\tconst connectPeer = (user) => {\n\t\tconsole.log(\"connecting\")\n\n\t\tconst peer = new Peer({\n\t\t\tinitiator: true,\n\t\t\ttrickle: false,\n\t\t\tstream: myVideo.current.srcObject,\n\t\t})\n\n\t\tpeer.on('signal', data => {\n\t\t\tpeer.signal(data)\n\t\t})\n\t\t\n\n\t\tlet temp = connected;\n\t\ttemp[user.id] = true;\n\t\tsetConnected(temp);\n\t\treturn;\n\t}\n\n\tconst disconnectPeer = (user) => {\n\t\tconsole.log(\"disconnecting\")\n\n\n\t\tlet temp = connected;\n\t\tdelete temp[user.id]\n\t\tsetConnected(temp);\n\t\treturn;\n\t}\n\n  return (\n\t\t<div className=\"room\">\n\t\t\t<div className=\"video-canvas\">\n\t\t\t\t<div className=\"videobox\">\n\t\t\t\t\t<div className=\"buttonbox\">\n\t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n\t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n\t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<StyledVideo muted ref={ myVideo } autoPlay playsInLine />\n\t\t\t\t\t<div className=\"videos\">\n\t\t\t\t\t\t{ peers.map((peer, idx) => {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<Video key={ idx } peer={ peer } />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n\t\t\t</div>\n\t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } />\n\t\t</div>\n  );\n};\n\nexport default Room;"]},"metadata":{},"sourceType":"module"}