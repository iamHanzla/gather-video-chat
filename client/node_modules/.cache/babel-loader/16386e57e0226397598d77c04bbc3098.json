{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkapoor/gather-video-chat/client/src/Room.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nconst StyledVideo = styled.video`\n\theight: 300px;\n\twidth: 300px;\n`;\n_c = StyledVideo;\n\nconst Video = props => {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", stream => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledVideo, {\n    playsInLine: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c2 = Video;\n\nfunction Room(props) {\n  _s2();\n\n  const [users, setUsers] = useState([]);\n  const [peers, setPeers] = useState([]);\n  const [stream, setStream] = useState();\n  const [connected, setConnected] = useState({});\n  const myVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.roomID;\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      myVideo.current.srcObject = stream.srcObject;\n      socket.emit('join room', roomID);\n      socket.on('all users', users => {\n        const peers = [];\n        users.forEach(userID => {\n          if (connected[userID] !== undefined) {\n            const peer = createPeer(userID, socket.id, stream);\n            peersRef.currennt.push({\n              peerID: userID,\n              peer\n            });\n            peers.push(peer);\n          }\n        });\n        setPeers(peers);\n      });\n      socket.on('user joined', payload => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer\n        });\n        setPeers(users => [...users, peer]);\n      });\n      socket.on('receiving returned signal', payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('receive move', data => {\n      setUsers(data.all);\n\n      for (let i = 0; i < data.all.length; i++) {\n        if (data.all[i].id === data.me.id) {\n          continue;\n        }\n\n        let closer = proximity(data.all[i], data.me);\n\n        if (closer && connected[data.all[i].id] === undefined) {\n          connectPeer(data.all[i]);\n        } else if (!closer && connected[data.all[i].id] !== undefined) {\n          disconnectPeer(data.all[i]);\n        }\n      }\n    });\n  }, [socket]);\n\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', signal => {\n      socket.emit('sending signnal', {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  };\n\n  const addPeer = (incomingSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', signal => {\n      socket.emit('returning signal', {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  };\n\n  let setup = (p5, canvas) => {\n    let canv = p5.createCanvas(800, 600).parent(canvas);\n    let tempUsers = [];\n    tempUsers.push({\n      id: socket.id,\n      room: roomID,\n      x: 400,\n      y: 100\n    });\n    setUsers(tempUsers);\n  };\n\n  let draw = p5 => {\n    p5.background(\"rgb(255, 255, 255)\");\n    let idx = users.findIndex(user => user.id === socket.id);\n\n    if (idx !== -1) {\n      let tempUsers = users;\n\n      if (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n        tempUsers[idx].y = tempUsers[idx].y - 2;\n      }\n\n      if (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n        tempUsers[idx].x = tempUsers[idx].x - 2;\n      }\n\n      if (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n        tempUsers[idx].y = tempUsers[idx].y + 2;\n      }\n\n      if (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n        tempUsers[idx].x = tempUsers[idx].x + 2;\n      }\n\n      let data = {\n        id: socket.id,\n        room: roomID,\n        x: tempUsers[idx].x,\n        y: tempUsers[idx].y\n      };\n      setUsers(tempUsers);\n      socket.emit('send move', data);\n    }\n\n    for (let i = 0; i < users.length; i++) {\n      p5.circle(users[i].x, users[i].y, 16);\n    }\n  };\n\n  const muteUnmute = e => {};\n\n  const cameraOnOff = e => {};\n\n  const screenShare = e => {};\n\n  const proximity = (user, me) => {\n    if ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const connectPeer = user => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: myVideo.current.srcObject\n    });\n    let temp = connected;\n    temp[user.id] = true;\n    setConnected(temp);\n    return;\n  };\n\n  const disconnectPeer = user => {\n    let temp = connected;\n    delete temp[user.id];\n    setConnected(temp);\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-canvas\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videobox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"mute\",\n            onClick: e => muteUnmute(e),\n            children: \" Mute \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"camera\",\n            onClick: e => cameraOnOff(e),\n            children: \" Camera \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"screenshare\",\n            onClick: e => screenShare(e),\n            children: \" ScreenShare \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(StyledVideo, {\n          muted: true,\n          ref: myVideo,\n          autoPlay: true,\n          playsInLine: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videos\",\n          children: [console.log(peers), peers.map((peer, idx) => {\n            return /*#__PURE__*/_jsxDEV(Video, {\n              peer: peer\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 9\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: setup,\n        draw: draw,\n        className: \"canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      className: \"chat\",\n      socket: socket,\n      room: roomID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(Room, \"ipzKzozR4G6WlhFjUpLz76oCs20=\");\n\n_c3 = Room;\n;\nexport default Room; // import React, { useEffect, useRef, useState } from \"react\";\n// import io from \"socket.io-client\";\n// import Peer from \"simple-peer\";\n// import \"./Room.css\";\n// import Sketch from 'react-p5';\n// import styled from \"styled-components\";\n// import Chat from './Chat';\n// const socket = io.connect(\"http://localhost:3001\");\n// const StyledVideo = styled.video`\n// \theight: 300px;\n// \twidth: 300px;\n// `;\n// const Video = (props) => {\n// \tconst ref = useRef();\n// \tuseEffect(() => {\n// \t\tprops.peer.on(\"stream\", stream => {\n// \t\t\t\tref.current.srcObject = stream;\n// \t\t})\n// \t}, []);\n// \treturn (\n// \t\t<StyledVideo playsInLine autoPlay ref={ ref } />\n// \t);\n// }\n// function Room(props) {\n// \t\tconst [users, setUsers] = useState([]);\n// \t\tconst [me, setMe] = useState({});\n// \t\tconst myVideo = useRef();\n//     const roomID = props.match.params.roomID;\n// useEffect(() => {\n// \tsocket.emit(\"join room\", roomID);\n// \tconst getUserMedia = async () => {\n// \t\ttry {\n// \t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n// \t\t\tmyVideo.current.srcObject = stream;\n// \t\t} catch (err) {\n// \t\t\tconsole.log(err)\n// \t\t}\n// \t}\n// \tgetUserMedia();\n// }, []);\n// \tuseEffect(() => {\n// \t\tsocket.on('receive move', (data) => {\n// \t\t\tsetUsers(data);\n// \t\t})\n// \t}, [socket]);\n// \tlet setup = (p5, canvas) => {\n// \t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n// \t\tlet tempUsers = [];\n// \t\tsetMe({ id: socket.id, room: roomID, x: 400, y: 100 });\n// \t\ttempUsers.push({\n// \t\t\tid: socket.id,\n// \t\t\troom: roomID,\n// \t\t\tx: 400,\n// \t\t\ty: 100\n// \t\t});\n// \t\tsetUsers(tempUsers);\n// \t}\n// \tlet draw = (p5) => {\n// \t\tp5.background(\"rgb(255, 255, 255)\");\n// \t\tlet idx = users.findIndex((user) => user.id === socket.id)\n// \t\tif (idx !== -1) {\n// \t\t\tlet tempUsers = users;\n// \t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n// \t\t\t}\t\n// \t\t\tsetUsers(tempUsers);\n// \t\t\tlet data = {\n// \t\t\t\tid: socket.id,\n// \t\t\t\troom: roomID,\n// \t\t\t\tx: tempUsers[idx].x,\n// \t\t\t\ty: tempUsers[idx].y\t\n// \t\t\t}\n// \t\t\tsetMe(data);\n// \t\t\tsocket.emit('send move', data);\n// \t\t}\n// \t\tfor (let i = 0; i < users.length; i ++) {\n// \t\t\tp5.circle(users[i].x, users[i].y, 16);\n// \t\t}\n// \t}\n// \tconst muteUnmute = (e) => {\n// \t}\n// \tconst cameraOnOff = (e) => {\n// \t}\n// \tconst screenShare = (e) => {\n// \t}\n// \tconst proximity = (user) => {\n// \t\tif (user.id === me.id) {\n// \t\t\treturn false;\n// \t\t}\n// \t\tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n// \t\t\treturn true;\n// \t\t} else {\n// \t\t\treturn false;\n// \t\t}\n// \t}\t\n//   return (\n// \t\t<div className=\"room\">\n// \t\t\t<div className=\"video-canvas\">\n// \t\t\t\t<div className=\"videobox\">\n// \t\t\t\t\t<div className=\"buttonbox\">\n// \t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n// \t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n// \t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<StyledVideo muted ref={ myVideo } autoPlay playsInLine />\n// \t\t\t\t\t<div className=\"videos\">\n// \t\t\t\t\t\t{ users.map(user => {\n// \t\t\t\t\t\t\treturn(\n// \t\t\t\t\t\t\t\tproximity(user) ? (\n// \t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t{ console.log(\"yes\") }\n// \t\t\t\t\t\t\t\t\t\t{ socket.emit(\"connect peer\", { first: user, second: me })}\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\tuser.id === me.id ? (\n// \t\t\t\t\t\t\t\t\t\t<div></div>\n// \t\t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t\t{ console.log(\"no\") }\n// \t\t\t\t\t\t\t\t\t\t\t{ socket.emit(\"disconnect peer\", { first: user, second: me })}\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t)\n// \t\t\t\t\t\t})}\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n// \t\t\t</div>\n// \t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } />\n// \t\t</div>\n//   );\n// };\n// export default Room;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledVideo\");\n$RefreshReg$(_c2, \"Video\");\n$RefreshReg$(_c3, \"Room\");","map":{"version":3,"sources":["/Users/shubhamkapoor/gather-video-chat/client/src/Room.js"],"names":["React","useEffect","useRef","useState","io","Peer","Sketch","styled","Chat","socket","connect","StyledVideo","video","Video","props","ref","peer","on","stream","current","srcObject","Room","users","setUsers","peers","setPeers","setStream","connected","setConnected","myVideo","peersRef","roomID","match","params","navigator","mediaDevices","getUserMedia","audio","then","emit","forEach","userID","undefined","createPeer","id","currennt","push","peerID","payload","addPeer","signal","callerID","item","find","p","data","all","i","length","me","closer","proximity","connectPeer","disconnectPeer","userToSignal","initiator","trickle","incomingSignal","setup","p5","canvas","canv","createCanvas","parent","tempUsers","room","x","y","draw","background","idx","findIndex","user","keyIsDown","circle","muteUnmute","e","cameraOnOff","screenShare","temp","console","log","map"],"mappings":"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BD;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAwBD;;IAlNQV,I;;MAAAA,I;AAkNR;AAED,eAAeA,IAAf,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEE;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AAEF;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from './Chat';\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nconst StyledVideo = styled.video`\n\theight: 300px;\n\twidth: 300px;\n`;\n\nconst Video = (props) => {\n\tconst ref = useRef();\n\n\tuseEffect(() => {\n\t\tprops.peer.on(\"stream\", stream => {\n\t\t\t\tref.current.srcObject = stream;\n\t\t})\n\t}, []);\n\n\treturn (\n\t\t<StyledVideo playsInLine autoPlay ref={ ref } />\n\t);\n}\n\nfunction Room(props) {\n\t\tconst [users, setUsers] = useState([]);\n\t\tconst [peers, setPeers] = useState([]);\n\t\tconst [stream, setStream] = useState();\n\t\tconst [connected, setConnected] = useState({});\n\t\tconst myVideo = useRef();\n\t\tconst peersRef = useRef([]);\n    const roomID = props.match.params.roomID;\n\n\t\tuseEffect(() => {\n\t\t\tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n\t\t\t\tmyVideo.current.srcObject = stream.srcObject;\n\t\t\t\tsocket.emit('join room', roomID);\n\t\t\t\tsocket.on('all users', users => {\n\t\t\t\t\tconst peers = [];\n\t\t\t\t\tusers.forEach(userID => {\n\t\t\t\t\t\tif (connected[userID] !== undefined) {\n\t\t\t\t\t\t\tconst peer = createPeer(userID, socket.id, stream);\n\t\t\t\t\t\t\tpeersRef.currennt.push({\n\t\t\t\t\t\t\t\tpeerID: userID,\n\t\t\t\t\t\t\t\tpeer,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tpeers.push(peer);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tsetPeers(peers);\n\t\t\t\t})\n\n\t\t\t\tsocket.on('user joined', payload => {\n\t\t\t\t\tconst peer = addPeer(payload.signal, payload.callerID, stream);\n\t\t\t\t\tpeersRef.current.push({\n\t\t\t\t\t\tpeerID: payload.callerID,\n\t\t\t\t\t\tpeer,\n\t\t\t\t\t})\n\n\t\t\t\t\tsetPeers(users => [...users, peer]);\n\t\t\t\t})\n\n\t\t\t\tsocket.on('receiving returned signal', payload => {\n\t\t\t\t\tconst item = peersRef.current.find(p => p.peerID === payload.id);\n\t\t\t\t\titem.peer.signal(payload.signal);\n\t\t\t\t})\n\t\t\t})\n\t\t}, []);\n\n\tuseEffect(() => {\n\t\tsocket.on('receive move', (data) => {\n\t\t\tsetUsers(data.all);\n\t\t\tfor (let i = 0; i < data.all.length; i ++) {\n\t\t\t\tif (data.all[i].id === data.me.id) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet closer = proximity(data.all[i], data.me)\n\t\t\t\tif (closer && connected[data.all[i].id] === undefined) {\n\t\t\t\t\tconnectPeer(data.all[i]);\n\t\t\t\t} else if (!closer && connected[data.all[i].id] !== undefined) {\n\t\t\t\t\tdisconnectPeer(data.all[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}, [socket]);\n\n\tconst createPeer = (userToSignal, callerID, stream) => {\n\t\tconst peer = new Peer({\n\t\t\tinitiator: true,\n\t\t\ttrickle: false,\n\t\t\tstream,\n\t\t})\n\n\t\tpeer.on('signal', signal => {\n\t\t\tsocket.emit('sending signnal', { userToSignal, callerID, signal })\n\t\t})\n\n\t\treturn peer;\n\t}\n\n\tconst addPeer = (incomingSignal, callerID, stream) => {\n\t\tconst peer = new Peer({\n\t\t\tinitiator: false,\n\t\t\ttrickle: false,\n\t\t\tstream,\n\t\t})\n\n\t\tpeer.on('signal', signal => {\n\t\t\tsocket.emit('returning signal', { signal, callerID })\n\t\t})\n\n\t\tpeer.signal(incomingSignal)\n\n\t\treturn peer;\n\t}\n\n\tlet setup = (p5, canvas) => {\n\t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n\t\tlet tempUsers = [];\n\t\ttempUsers.push({\n\t\t\tid: socket.id,\n\t\t\troom: roomID,\n\t\t\tx: 400,\n\t\t\ty: 100\n\t\t});\n\t\t\n\t\tsetUsers(tempUsers);\n\t}\n\n\tlet draw = (p5) => {\n\t\tp5.background(\"rgb(255, 255, 255)\");\n\n\t\tlet idx = users.findIndex((user) => user.id === socket.id)\n\t\tif (idx !== -1) {\n\t\t\tlet tempUsers = users;\n\n\t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n\t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n\t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n\t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n\t\t\t}\n\t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n\t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n\t\t\t}\t\n\t\t\t\n\t\t\tlet data = {\n\t\t\t\tid: socket.id,\n\t\t\t\troom: roomID,\n\t\t\t\tx: tempUsers[idx].x,\n\t\t\t\ty: tempUsers[idx].y\t\n\t\t\t}\n\n\t\t\tsetUsers(tempUsers);\n\t\t\tsocket.emit('send move', data);\n\t\t}\n\n\t\tfor (let i = 0; i < users.length; i ++) {\n\t\t\tp5.circle(users[i].x, users[i].y, 16);\n\t\t}\n\t}\n\n\tconst muteUnmute = (e) => {\n\n\t}\n\n\tconst cameraOnOff = (e) => {\n\n\t}\n\n\tconst screenShare = (e) => {\n\n\t}\n\n\tconst proximity = (user, me) => {\n\t\tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\t\n\n\tconst connectPeer = (user) => {\n\t\tconst peer = new Peer({\n\t\t\tinitiator: true,\n\t\t\ttrickle: false,\n\t\t\tstream: myVideo.current.srcObject,\n\t\t})\n\n\n\n\t\tlet temp = connected;\n\t\ttemp[user.id] = true;\n\t\tsetConnected(temp);\n\t\treturn;\n\t}\n\n\tconst disconnectPeer = (user) => {\n\n\n\n\t\tlet temp = connected;\n\t\tdelete temp[user.id]\n\t\tsetConnected(temp);\n\t\treturn;\n\t}\n\n  return (\n\t\t<div className=\"room\">\n\t\t\t<div className=\"video-canvas\">\n\t\t\t\t<div className=\"videobox\">\n\t\t\t\t\t<div className=\"buttonbox\">\n\t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n\t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n\t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<StyledVideo muted ref={ myVideo } autoPlay playsInLine />\n\t\t\t\t\t<div className=\"videos\">\n\t\t\t\t\t\t{ console.log(peers) }\n\t\t\t\t\t\t{ peers.map((peer, idx) => {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<Video key={ idx } peer={ peer } />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n\t\t\t</div>\n\t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } />\n\t\t</div>\n  );\n};\n\nexport default Room;\n\n\n\n\n\n\n\n// import React, { useEffect, useRef, useState } from \"react\";\n// import io from \"socket.io-client\";\n// import Peer from \"simple-peer\";\n// import \"./Room.css\";\n// import Sketch from 'react-p5';\n// import styled from \"styled-components\";\n// import Chat from './Chat';\n\n// const socket = io.connect(\"http://localhost:3001\");\n\n// const StyledVideo = styled.video`\n// \theight: 300px;\n// \twidth: 300px;\n// `;\n\n// const Video = (props) => {\n// \tconst ref = useRef();\n\n// \tuseEffect(() => {\n// \t\tprops.peer.on(\"stream\", stream => {\n// \t\t\t\tref.current.srcObject = stream;\n// \t\t})\n// \t}, []);\n\n// \treturn (\n// \t\t<StyledVideo playsInLine autoPlay ref={ ref } />\n// \t);\n// }\n\n// function Room(props) {\n// \t\tconst [users, setUsers] = useState([]);\n// \t\tconst [me, setMe] = useState({});\n\t\t\n// \t\tconst myVideo = useRef();\n//     const roomID = props.match.params.roomID;\n\n  // useEffect(() => {\n\t// \tsocket.emit(\"join room\", roomID);\n\t// \tconst getUserMedia = async () => {\n\t// \t\ttry {\n\t// \t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n\t// \t\t\tmyVideo.current.srcObject = stream;\n\t// \t\t} catch (err) {\n\t// \t\t\tconsole.log(err)\n\t// \t\t}\n\t// \t}\n\t// \tgetUserMedia();\n  // }, []);\n\n// \tuseEffect(() => {\n// \t\tsocket.on('receive move', (data) => {\n// \t\t\tsetUsers(data);\n// \t\t})\n// \t}, [socket]);\n\n// \tlet setup = (p5, canvas) => {\n// \t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n// \t\tlet tempUsers = [];\n// \t\tsetMe({ id: socket.id, room: roomID, x: 400, y: 100 });\n// \t\ttempUsers.push({\n// \t\t\tid: socket.id,\n// \t\t\troom: roomID,\n// \t\t\tx: 400,\n// \t\t\ty: 100\n// \t\t});\n\t\t\n// \t\tsetUsers(tempUsers);\n// \t}\n\n// \tlet draw = (p5) => {\n// \t\tp5.background(\"rgb(255, 255, 255)\");\n\n// \t\tlet idx = users.findIndex((user) => user.id === socket.id)\n// \t\tif (idx !== -1) {\n// \t\t\tlet tempUsers = users;\n\n// \t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n// \t\t\t}\t\n\t\t\t\n// \t\t\tsetUsers(tempUsers);\n// \t\t\tlet data = {\n// \t\t\t\tid: socket.id,\n// \t\t\t\troom: roomID,\n// \t\t\t\tx: tempUsers[idx].x,\n// \t\t\t\ty: tempUsers[idx].y\t\n// \t\t\t}\n// \t\t\tsetMe(data);\n// \t\t\tsocket.emit('send move', data);\n// \t\t}\n// \t\tfor (let i = 0; i < users.length; i ++) {\n// \t\t\tp5.circle(users[i].x, users[i].y, 16);\n// \t\t}\n// \t}\n\n// \tconst muteUnmute = (e) => {\n\n// \t}\n\n// \tconst cameraOnOff = (e) => {\n\n// \t}\n\n// \tconst screenShare = (e) => {\n\n// \t}\n\n// \tconst proximity = (user) => {\n// \t\tif (user.id === me.id) {\n// \t\t\treturn false;\n// \t\t}\n// \t\tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n// \t\t\treturn true;\n// \t\t} else {\n// \t\t\treturn false;\n// \t\t}\n// \t}\t\n\n//   return (\n// \t\t<div className=\"room\">\n// \t\t\t<div className=\"video-canvas\">\n// \t\t\t\t<div className=\"videobox\">\n// \t\t\t\t\t<div className=\"buttonbox\">\n// \t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n// \t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n// \t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<StyledVideo muted ref={ myVideo } autoPlay playsInLine />\n// \t\t\t\t\t<div className=\"videos\">\n// \t\t\t\t\t\t{ users.map(user => {\n// \t\t\t\t\t\t\treturn(\n// \t\t\t\t\t\t\t\tproximity(user) ? (\n// \t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t{ console.log(\"yes\") }\n// \t\t\t\t\t\t\t\t\t\t{ socket.emit(\"connect peer\", { first: user, second: me })}\n// \t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\tuser.id === me.id ? (\n// \t\t\t\t\t\t\t\t\t\t<div></div>\n// \t\t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t\t\t\t\t{ console.log(\"no\") }\n// \t\t\t\t\t\t\t\t\t\t\t{ socket.emit(\"disconnect peer\", { first: user, second: me })}\n// \t\t\t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t)\n// \t\t\t\t\t\t})}\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n// \t\t\t</div>\n// \t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } />\n// \t\t</div>\n//   );\n// };\n\n// export default Room;"]},"metadata":{},"sourceType":"module"}